{"id":"node_modules/@antv/layout/lib/layout/dagre/src/order/sort.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\lib\\layout\\dagre\\src\\order\\sort.js.map","includedInParent":true,"mtime":1676178923766},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\src\\layout\\dagre\\src\\order\\sort.ts","includedInParent":true,"mtime":1676178924061},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\package.json","includedInParent":true,"mtime":1676178924413},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\package.json","includedInParent":true,"mtime":1676178923486},{"name":"../util","loc":{"line":3,"column":21,"index":98},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\lib\\layout\\dagre\\src\\order\\sort.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\lib\\layout\\dagre\\src\\util.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util\");\nvar sort = function (entries, biasRight, usePrev) {\n    var parts = (0, util_1.partition)(entries, function (entry) {\n        // NOTE: 有fixorder的也可以排\n        return (entry.hasOwnProperty(\"fixorder\") && !isNaN(entry.fixorder)) || entry.hasOwnProperty(\"barycenter\");\n    });\n    var sortable = parts.lhs;\n    var unsortable = parts.rhs.sort(function (a, b) { return -a.i - (-b.i); });\n    var vs = [];\n    var sum = 0;\n    var weight = 0;\n    var vsIndex = 0;\n    sortable === null || sortable === void 0 ? void 0 : sortable.sort(compareWithBias(!!biasRight, !!usePrev));\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n    sortable === null || sortable === void 0 ? void 0 : sortable.forEach(function (entry) {\n        var _a;\n        vsIndex += (_a = entry.vs) === null || _a === void 0 ? void 0 : _a.length;\n        vs.push(entry.vs);\n        sum += entry.barycenter * entry.weight;\n        weight += entry.weight;\n        vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n    });\n    var result = { vs: vs.flat() };\n    if (weight) {\n        result.barycenter = sum / weight;\n        result.weight = weight;\n    }\n    return result;\n};\nvar consumeUnsortable = function (vs, unsortable, index) {\n    var iindex = index;\n    var last;\n    while (unsortable.length && (last = unsortable[unsortable.length - 1]).i <= iindex) {\n        unsortable.pop();\n        vs === null || vs === void 0 ? void 0 : vs.push(last.vs);\n        iindex++;\n    }\n    return iindex;\n};\n/**\n * 配置是否考虑使用之前的布局结果\n */\nvar compareWithBias = function (bias, usePrev) {\n    return function (entryV, entryW) {\n        // 排序的时候先判断fixorder，不行再判断重心\n        if (entryV.fixorder !== undefined && entryW.fixorder !== undefined) {\n            return entryV.fixorder - entryW.fixorder;\n        }\n        if (entryV.barycenter < entryW.barycenter) {\n            return -1;\n        }\n        if (entryV.barycenter > entryW.barycenter) {\n            return 1;\n        }\n        // 重心相同，考虑之前排好的顺序\n        if (usePrev && entryV.order !== undefined && entryW.order !== undefined) {\n            if (entryV.order < entryW.order) {\n                return -1;\n            }\n            if (entryV.order > entryW.order) {\n                return 1;\n            }\n        }\n        return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n    };\n};\nexports.default = sort;\n"},"sourceMaps":{"js":{"version":3,"file":"sort.js","sourceRoot":"","sources":["../../../../../src/layout/dagre/src/order/sort.ts"],"names":[],"mappings":";;AAAA,gCAAoC;AAGpC,IAAM,IAAI,GAAG,UAAC,OAAwB,EAAE,SAAmB,EAAE,OAAiB;IAC5E,IAAM,KAAK,GAAG,IAAA,gBAAS,EAAC,OAAO,EAAE,UAAC,KAAK;QACrC,uBAAuB;QACvB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAS,CAAC,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAC7G,CAAC,CAAC,CAAC;IACH,IAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;IAC3B,IAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAb,CAAa,CAAC,CAAC;IAC3D,IAAM,EAAE,GAAe,EAAE,CAAC;IAC1B,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,OAAO,GAAG,CAAC,CAAC;IAEhB,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAExD,OAAO,GAAG,iBAAiB,CAAC,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IAErD,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,CAAC,UAAC,KAAK;;QACtB,OAAO,IAAI,MAAA,KAAK,CAAC,EAAE,0CAAE,MAAM,CAAC;QAC5B,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClB,GAAG,IAAI,KAAK,CAAC,UAAW,GAAG,KAAK,CAAC,MAAO,CAAC;QACzC,MAAM,IAAI,KAAK,CAAC,MAAO,CAAC;QACxB,OAAO,GAAG,iBAAiB,CAAC,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,IAAM,MAAM,GAA2D,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;IACzF,IAAI,MAAM,EAAE;QACV,MAAM,CAAC,UAAU,GAAG,GAAG,GAAG,MAAM,CAAC;QACjC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,IAAM,iBAAiB,GAAG,UAAC,EAAc,EAAE,UAA2B,EAAE,KAAa;IACnF,IAAI,MAAM,GAAG,KAAK,CAAC;IACnB,IAAI,IAAI,CAAC;IACT,OAAO,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;QAClF,UAAU,CAAC,GAAG,EAAE,CAAC;QACjB,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClB,MAAM,EAAE,CAAC;KACV;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;GAEG;AACH,IAAM,eAAe,GAAG,UAAC,IAAa,EAAE,OAAgB;IACtD,OAAO,UAAC,MAAqB,EAAE,MAAqB;QAClD,2BAA2B;QAC3B,IAAI,MAAM,CAAC,QAAQ,KAAK,SAAS,IAAI,MAAM,CAAC,QAAQ,KAAK,SAAS,EAAE;YAClE,OAAO,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAC1C;QACD,IAAI,MAAM,CAAC,UAAW,GAAG,MAAM,CAAC,UAAW,EAAE;YAC3C,OAAO,CAAC,CAAC,CAAC;SACX;QACD,IAAI,MAAM,CAAC,UAAW,GAAG,MAAM,CAAC,UAAW,EAAE;YAC3C,OAAO,CAAC,CAAC;SACV;QACD,iBAAiB;QACjB,IAAI,OAAO,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;YACvE,IAAI,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE;gBAC/B,OAAO,CAAC,CAAC,CAAC;aACX;YACD,IAAI,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE;gBAC/B,OAAO,CAAC,CAAC;aACV;SACF;QAED,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,IAAI,CAAC","sourcesContent":["import { partition } from \"../util\";\nimport { ConflictEntry } from \"./resolve-conflicts\";\n\nconst sort = (entries: ConflictEntry[], biasRight?: boolean, usePrev?: boolean) => {\n  const parts = partition(entries, (entry) => {\n    // NOTE: 有fixorder的也可以排\n    return (entry.hasOwnProperty(\"fixorder\") && !isNaN(entry.fixorder!)) || entry.hasOwnProperty(\"barycenter\");\n  });\n  const sortable = parts.lhs;\n  const unsortable = parts.rhs.sort((a, b) => -a.i - (-b.i));\n  const vs: string[][] = [];\n  let sum = 0;\n  let weight = 0;\n  let vsIndex = 0;\n\n  sortable?.sort(compareWithBias(!!biasRight, !!usePrev));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  sortable?.forEach((entry) => {\n    vsIndex += entry.vs?.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter! * entry.weight!;\n    weight += entry.weight!;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  const result: { vs: string[], barycenter?: number, weight?: number } = { vs: vs.flat() };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n};\n\nconst consumeUnsortable = (vs: string[][], unsortable: ConflictEntry[], index: number) => {\n  let iindex = index;\n  let last;\n  while (unsortable.length && (last = unsortable[unsortable.length - 1]).i <= iindex) {\n    unsortable.pop();\n    vs?.push(last.vs);\n    iindex++;\n  }\n  return iindex;\n};\n\n/**\n * 配置是否考虑使用之前的布局结果\n */\nconst compareWithBias = (bias: boolean, usePrev: boolean) => {\n  return (entryV: ConflictEntry, entryW: ConflictEntry) => {\n    // 排序的时候先判断fixorder，不行再判断重心\n    if (entryV.fixorder !== undefined && entryW.fixorder !== undefined) {\n      return entryV.fixorder - entryW.fixorder;\n    }\n    if (entryV.barycenter! < entryW.barycenter!) {\n      return -1;\n    }\n    if (entryV.barycenter! > entryW.barycenter!) {\n      return 1;\n    }\n    // 重心相同，考虑之前排好的顺序\n    if (usePrev && entryV.order !== undefined && entryW.order !== undefined) {\n      if (entryV.order < entryW.order) {\n        return -1;\n      }\n      if (entryV.order > entryW.order) {\n        return 1;\n      }\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n};\n\nexport default sort;"]}},"error":null,"hash":"79d41ceb91d5832d943ad8985e869474","cacheData":{"env":{}}}