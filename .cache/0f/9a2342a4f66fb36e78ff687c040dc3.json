{"id":"node_modules/@antv/algorithm/lib/workers/index.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\package.json","includedInParent":true,"mtime":1676178924413},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\package.json","includedInParent":true,"mtime":1676178923049},{"name":"./createWorker","loc":{"line":8,"column":51,"index":693},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\workers\\index.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\workers\\createWorker.js"},{"name":"./constant","loc":{"line":10,"column":24,"index":738},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\workers\\index.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\workers\\constant.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pageRankAsync = exports.minimumSpanningTreeAsync = exports.louvainAsync = exports.labelPropagationAsync = exports.getOutDegreeAsync = exports.getNeighborsAsync = exports.getInDegreeAsync = exports.getDegreeAsync = exports.getAdjMatrixAsync = exports.floydWarshallAsync = exports.findShortestPathAsync = exports.findAllPathAsync = exports.dijkstraAsync = exports.detectCycleAsync = exports.detectAllUndirectedCycleAsync = exports.detectAllDirectedCycleAsync = exports.detectAllCyclesAsync = exports.connectedComponentAsync = exports.GADDIAsync = void 0;\n\nvar _createWorker = _interopRequireDefault(require(\"./createWorker\"));\n\nvar _constant = require(\"./constant\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param graphData 图数据\n * @param directed 是否为有向图\n */\nvar getAdjMatrixAsync = function getAdjMatrixAsync(graphData, directed) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getAdjMatrix).apply(void 0, [graphData, directed]);\n};\n/**\n * 图的连通分量\n * @param graphData 图数据\n * @param directed 是否为有向图\n */\n\n\nexports.getAdjMatrixAsync = getAdjMatrixAsync;\n\nvar connectedComponentAsync = function connectedComponentAsync(graphData, directed) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.connectedComponent).apply(void 0, [graphData, directed]);\n};\n/**\n * 获取节点的度\n * @param graphData 图数据\n */\n\n\nexports.connectedComponentAsync = connectedComponentAsync;\n\nvar getDegreeAsync = function getDegreeAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getDegree)(graphData);\n};\n/**\n * 获取节点的入度\n * @param graphData 图数据\n * @param nodeId 节点ID\n */\n\n\nexports.getDegreeAsync = getDegreeAsync;\n\nvar getInDegreeAsync = function getInDegreeAsync(graphData, nodeId) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getInDegree)(graphData, nodeId);\n};\n/**\n * 获取节点的出度\n * @param graphData 图数据\n * @param nodeId 节点ID\n */\n\n\nexports.getInDegreeAsync = getInDegreeAsync;\n\nvar getOutDegreeAsync = function getOutDegreeAsync(graphData, nodeId) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getOutDegree)(graphData, nodeId);\n};\n/**\n * 检测图中的(有向) Cycle\n * @param graphData 图数据\n */\n\n\nexports.getOutDegreeAsync = getOutDegreeAsync;\n\nvar detectCycleAsync = function detectCycleAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.detectCycle)(graphData);\n};\n/**\n * 检测图中的(无向) Cycle\n * @param graphData 图数据\n */\n\n\nexports.detectCycleAsync = detectCycleAsync;\n\nvar detectAllCyclesAsync = function detectAllCyclesAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.detectAllCycles)(graphData);\n};\n/**\n * 检测图中的所有(有向) Cycle\n * @param graphData 图数据\n */\n\n\nexports.detectAllCyclesAsync = detectAllCyclesAsync;\n\nvar detectAllDirectedCycleAsync = function detectAllDirectedCycleAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.detectAllDirectedCycle)(graphData);\n};\n/**\n * 检测图中的所有(无向) Cycle\n * @param graphData 图数据\n */\n\n\nexports.detectAllDirectedCycleAsync = detectAllDirectedCycleAsync;\n\nvar detectAllUndirectedCycleAsync = function detectAllUndirectedCycleAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.detectAllUndirectedCycle)(graphData);\n};\n/**\n * Dijkstra's algorithm, See {@link https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm}\n * @param graphData 图数据\n */\n\n\nexports.detectAllUndirectedCycleAsync = detectAllUndirectedCycleAsync;\n\nvar dijkstraAsync = function dijkstraAsync(graphData, source, directed, weightPropertyName) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.dijkstra).apply(void 0, [graphData, source, directed, weightPropertyName]);\n};\n/**\n * 查找两点之间的所有路径\n * @param graphData 图数据\n * @param start 路径起始点ID\n * @param end 路径终点ID\n * @param directed 是否为有向图\n */\n\n\nexports.dijkstraAsync = dijkstraAsync;\n\nvar findAllPathAsync = function findAllPathAsync(graphData, start, end, directed) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.findAllPath).apply(void 0, [graphData, start, end, directed]);\n};\n/**\n * 查找两点之间的所有路径\n * @param graphData 图数据\n * @param start 路径起始点ID\n * @param end 路径终点ID\n * @param directed 是否为有向图\n * @param weightPropertyName 边权重的属名称，若数据中没有权重，则默认每条边权重为 1\n */\n\n\nexports.findAllPathAsync = findAllPathAsync;\n\nvar findShortestPathAsync = function findShortestPathAsync(graphData, start, end, directed, weightPropertyName) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.findShortestPath).apply(void 0, [graphData, start, end, directed, weightPropertyName]);\n};\n/**\n * Floyd–Warshall algorithm, See {@link https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm}\n * @param graphData 图数据\n * @param directed 是否为有向图\n */\n\n\nexports.findShortestPathAsync = findShortestPathAsync;\n\nvar floydWarshallAsync = function floydWarshallAsync(graphData, directed) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.floydWarshall).apply(void 0, [graphData, directed]);\n};\n/**\n * 标签传播算法\n * @param graphData 图数据\n * @param directed 是否有向图，默认为 false\n * @param weightPropertyName 权重的属性字段\n * @param maxIteration 最大迭代次数\n */\n\n\nexports.floydWarshallAsync = floydWarshallAsync;\n\nvar labelPropagationAsync = function labelPropagationAsync(graphData, directed, weightPropertyName, maxIteration) {\n  if (maxIteration === void 0) {\n    maxIteration = 1000;\n  }\n\n  return (0, _createWorker.default)(_constant.ALGORITHM.labelPropagation)(graphData, directed, weightPropertyName, maxIteration);\n};\n/**\n * 社区发现 louvain 算法\n * @param graphData 图数据\n * @param directed 是否有向图，默认为 false\n * @param weightPropertyName 权重的属性字段\n * @param threshold\n */\n\n\nexports.labelPropagationAsync = labelPropagationAsync;\n\nvar louvainAsync = function louvainAsync(graphData, directed, weightPropertyName, threshold) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.louvain)(graphData, directed, weightPropertyName, threshold);\n};\n/**\n * 最小生成树，See {@link https://en.wikipedia.org/wiki/Kruskal%27s_algorithm}\n * @param graph\n * @param weight 指定用于作为边权重的属性，若不指定，则认为所有边权重一致\n * @param algo 'prim' | 'kruskal' 算法类型\n * @return EdgeConfig[] 返回构成MST的边的数组\n */\n\n\nexports.louvainAsync = louvainAsync;\n\nvar minimumSpanningTreeAsync = function minimumSpanningTreeAsync(graphData, weight, algo) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.minimumSpanningTree).apply(void 0, [graphData, weight, algo]);\n};\n/**\n * PageRank https://en.wikipedia.org/wiki/PageRank\n * refer: https://github.com/anvaka/ngraph.pagerank\n * @param graph\n * @param epsilon 判断是否收敛的精度值，默认 0.000001\n * @param linkProb 阻尼系数（dumping factor），指任意时刻，用户访问到某节点后继续访问该节点链接的下一个节点的概率，经验值 0.85\n */\n\n\nexports.minimumSpanningTreeAsync = minimumSpanningTreeAsync;\n\nvar pageRankAsync = function pageRankAsync(graphData, epsilon, linkProb) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.pageRank).apply(void 0, [graphData, epsilon, linkProb]);\n};\n/**\n * 获取指定节点的所有邻居\n * @param nodeId 节点 ID\n * @param edges 图中的所有边数据\n * @param type 邻居类型\n */\n\n\nexports.pageRankAsync = pageRankAsync;\n\nvar getNeighborsAsync = function getNeighborsAsync(nodeId, edges, type) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getNeighbors).apply(void 0, [nodeId, edges, type]);\n};\n/**\n * GADDI 图模式匹配\n * @param graphData 原图数据\n * @param pattern 搜索图（需要在原图上搜索的模式）数据\n * @param directed 是否计算有向图，默认 false\n * @param k 参数 k，表示 k-近邻\n * @param length 参数 length\n * @param nodeLabelProp 节点数据中代表节点标签（分类信息）的属性名。默认为 cluster\n * @param edgeLabelProp 边数据中代表边标签（分类信息）的属性名。默认为 cluster\n */\n\n\nexports.getNeighborsAsync = getNeighborsAsync;\n\nvar GADDIAsync = function GADDIAsync(graphData, pattern, directed, k, length, nodeLabelProp, edgeLabelProp) {\n  if (directed === void 0) {\n    directed = false;\n  }\n\n  if (nodeLabelProp === void 0) {\n    nodeLabelProp = 'cluster';\n  }\n\n  if (edgeLabelProp === void 0) {\n    edgeLabelProp = 'cluster';\n  }\n\n  return (0, _createWorker.default)(_constant.ALGORITHM.GADDI).apply(void 0, [graphData, pattern, directed, k, length, nodeLabelProp, edgeLabelProp]);\n};\n\nexports.GADDIAsync = GADDIAsync;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@antv/algorithm/lib/workers/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}}],"sources":{"node_modules/@antv/algorithm/lib/workers/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pageRankAsync = exports.minimumSpanningTreeAsync = exports.louvainAsync = exports.labelPropagationAsync = exports.getOutDegreeAsync = exports.getNeighborsAsync = exports.getInDegreeAsync = exports.getDegreeAsync = exports.getAdjMatrixAsync = exports.floydWarshallAsync = exports.findShortestPathAsync = exports.findAllPathAsync = exports.dijkstraAsync = exports.detectCycleAsync = exports.detectAllUndirectedCycleAsync = exports.detectAllDirectedCycleAsync = exports.detectAllCyclesAsync = exports.connectedComponentAsync = exports.GADDIAsync = void 0;\n\nvar _createWorker = _interopRequireDefault(require(\"./createWorker\"));\n\nvar _constant = require(\"./constant\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param graphData 图数据\n * @param directed 是否为有向图\n */\nvar getAdjMatrixAsync = function getAdjMatrixAsync(graphData, directed) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getAdjMatrix).apply(void 0, [graphData, directed]);\n};\n/**\n * 图的连通分量\n * @param graphData 图数据\n * @param directed 是否为有向图\n */\n\n\nexports.getAdjMatrixAsync = getAdjMatrixAsync;\n\nvar connectedComponentAsync = function connectedComponentAsync(graphData, directed) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.connectedComponent).apply(void 0, [graphData, directed]);\n};\n/**\n * 获取节点的度\n * @param graphData 图数据\n */\n\n\nexports.connectedComponentAsync = connectedComponentAsync;\n\nvar getDegreeAsync = function getDegreeAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getDegree)(graphData);\n};\n/**\n * 获取节点的入度\n * @param graphData 图数据\n * @param nodeId 节点ID\n */\n\n\nexports.getDegreeAsync = getDegreeAsync;\n\nvar getInDegreeAsync = function getInDegreeAsync(graphData, nodeId) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getInDegree)(graphData, nodeId);\n};\n/**\n * 获取节点的出度\n * @param graphData 图数据\n * @param nodeId 节点ID\n */\n\n\nexports.getInDegreeAsync = getInDegreeAsync;\n\nvar getOutDegreeAsync = function getOutDegreeAsync(graphData, nodeId) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getOutDegree)(graphData, nodeId);\n};\n/**\n * 检测图中的(有向) Cycle\n * @param graphData 图数据\n */\n\n\nexports.getOutDegreeAsync = getOutDegreeAsync;\n\nvar detectCycleAsync = function detectCycleAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.detectCycle)(graphData);\n};\n/**\n * 检测图中的(无向) Cycle\n * @param graphData 图数据\n */\n\n\nexports.detectCycleAsync = detectCycleAsync;\n\nvar detectAllCyclesAsync = function detectAllCyclesAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.detectAllCycles)(graphData);\n};\n/**\n * 检测图中的所有(有向) Cycle\n * @param graphData 图数据\n */\n\n\nexports.detectAllCyclesAsync = detectAllCyclesAsync;\n\nvar detectAllDirectedCycleAsync = function detectAllDirectedCycleAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.detectAllDirectedCycle)(graphData);\n};\n/**\n * 检测图中的所有(无向) Cycle\n * @param graphData 图数据\n */\n\n\nexports.detectAllDirectedCycleAsync = detectAllDirectedCycleAsync;\n\nvar detectAllUndirectedCycleAsync = function detectAllUndirectedCycleAsync(graphData) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.detectAllUndirectedCycle)(graphData);\n};\n/**\n * Dijkstra's algorithm, See {@link https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm}\n * @param graphData 图数据\n */\n\n\nexports.detectAllUndirectedCycleAsync = detectAllUndirectedCycleAsync;\n\nvar dijkstraAsync = function dijkstraAsync(graphData, source, directed, weightPropertyName) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.dijkstra).apply(void 0, [graphData, source, directed, weightPropertyName]);\n};\n/**\n * 查找两点之间的所有路径\n * @param graphData 图数据\n * @param start 路径起始点ID\n * @param end 路径终点ID\n * @param directed 是否为有向图\n */\n\n\nexports.dijkstraAsync = dijkstraAsync;\n\nvar findAllPathAsync = function findAllPathAsync(graphData, start, end, directed) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.findAllPath).apply(void 0, [graphData, start, end, directed]);\n};\n/**\n * 查找两点之间的所有路径\n * @param graphData 图数据\n * @param start 路径起始点ID\n * @param end 路径终点ID\n * @param directed 是否为有向图\n * @param weightPropertyName 边权重的属名称，若数据中没有权重，则默认每条边权重为 1\n */\n\n\nexports.findAllPathAsync = findAllPathAsync;\n\nvar findShortestPathAsync = function findShortestPathAsync(graphData, start, end, directed, weightPropertyName) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.findShortestPath).apply(void 0, [graphData, start, end, directed, weightPropertyName]);\n};\n/**\n * Floyd–Warshall algorithm, See {@link https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm}\n * @param graphData 图数据\n * @param directed 是否为有向图\n */\n\n\nexports.findShortestPathAsync = findShortestPathAsync;\n\nvar floydWarshallAsync = function floydWarshallAsync(graphData, directed) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.floydWarshall).apply(void 0, [graphData, directed]);\n};\n/**\n * 标签传播算法\n * @param graphData 图数据\n * @param directed 是否有向图，默认为 false\n * @param weightPropertyName 权重的属性字段\n * @param maxIteration 最大迭代次数\n */\n\n\nexports.floydWarshallAsync = floydWarshallAsync;\n\nvar labelPropagationAsync = function labelPropagationAsync(graphData, directed, weightPropertyName, maxIteration) {\n  if (maxIteration === void 0) {\n    maxIteration = 1000;\n  }\n\n  return (0, _createWorker.default)(_constant.ALGORITHM.labelPropagation)(graphData, directed, weightPropertyName, maxIteration);\n};\n/**\n * 社区发现 louvain 算法\n * @param graphData 图数据\n * @param directed 是否有向图，默认为 false\n * @param weightPropertyName 权重的属性字段\n * @param threshold\n */\n\n\nexports.labelPropagationAsync = labelPropagationAsync;\n\nvar louvainAsync = function louvainAsync(graphData, directed, weightPropertyName, threshold) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.louvain)(graphData, directed, weightPropertyName, threshold);\n};\n/**\n * 最小生成树，See {@link https://en.wikipedia.org/wiki/Kruskal%27s_algorithm}\n * @param graph\n * @param weight 指定用于作为边权重的属性，若不指定，则认为所有边权重一致\n * @param algo 'prim' | 'kruskal' 算法类型\n * @return EdgeConfig[] 返回构成MST的边的数组\n */\n\n\nexports.louvainAsync = louvainAsync;\n\nvar minimumSpanningTreeAsync = function minimumSpanningTreeAsync(graphData, weight, algo) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.minimumSpanningTree).apply(void 0, [graphData, weight, algo]);\n};\n/**\n * PageRank https://en.wikipedia.org/wiki/PageRank\n * refer: https://github.com/anvaka/ngraph.pagerank\n * @param graph\n * @param epsilon 判断是否收敛的精度值，默认 0.000001\n * @param linkProb 阻尼系数（dumping factor），指任意时刻，用户访问到某节点后继续访问该节点链接的下一个节点的概率，经验值 0.85\n */\n\n\nexports.minimumSpanningTreeAsync = minimumSpanningTreeAsync;\n\nvar pageRankAsync = function pageRankAsync(graphData, epsilon, linkProb) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.pageRank).apply(void 0, [graphData, epsilon, linkProb]);\n};\n/**\n * 获取指定节点的所有邻居\n * @param nodeId 节点 ID\n * @param edges 图中的所有边数据\n * @param type 邻居类型\n */\n\n\nexports.pageRankAsync = pageRankAsync;\n\nvar getNeighborsAsync = function getNeighborsAsync(nodeId, edges, type) {\n  return (0, _createWorker.default)(_constant.ALGORITHM.getNeighbors).apply(void 0, [nodeId, edges, type]);\n};\n/**\n * GADDI 图模式匹配\n * @param graphData 原图数据\n * @param pattern 搜索图（需要在原图上搜索的模式）数据\n * @param directed 是否计算有向图，默认 false\n * @param k 参数 k，表示 k-近邻\n * @param length 参数 length\n * @param nodeLabelProp 节点数据中代表节点标签（分类信息）的属性名。默认为 cluster\n * @param edgeLabelProp 边数据中代表边标签（分类信息）的属性名。默认为 cluster\n */\n\n\nexports.getNeighborsAsync = getNeighborsAsync;\n\nvar GADDIAsync = function GADDIAsync(graphData, pattern, directed, k, length, nodeLabelProp, edgeLabelProp) {\n  if (directed === void 0) {\n    directed = false;\n  }\n\n  if (nodeLabelProp === void 0) {\n    nodeLabelProp = 'cluster';\n  }\n\n  if (edgeLabelProp === void 0) {\n    edgeLabelProp = 'cluster';\n  }\n\n  return (0, _createWorker.default)(_constant.ALGORITHM.GADDI).apply(void 0, [graphData, pattern, directed, k, length, nodeLabelProp, edgeLabelProp]);\n};\n\nexports.GADDIAsync = GADDIAsync;"},"lineCount":267}},"error":null,"hash":"e192a33bcdb7bae2a95389cbec1e3981","cacheData":{"env":{}}}