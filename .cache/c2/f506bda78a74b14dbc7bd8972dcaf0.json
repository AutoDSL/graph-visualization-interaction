{"id":"node_modules/@antv/layout/lib/layout/dagre/src/order/barycenter.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\dagre\\src\\order\\barycenter.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\src\\layout\\dagre\\src\\order\\barycenter.ts","includedInParent":true,"mtime":499162500000},{"name":"D:\\myData\\前端\\doing\\AutoPL\\package.json","includedInParent":true,"mtime":1674182060254},{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\package.json","includedInParent":true,"mtime":1674179681168}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar barycenter = function (g, movable) {\n    return movable.map(function (v) {\n        var inV = g.inEdges(v);\n        if (!(inV === null || inV === void 0 ? void 0 : inV.length)) {\n            return { v: v };\n        }\n        {\n            var result_1 = { sum: 0, weight: 0 };\n            inV === null || inV === void 0 ? void 0 : inV.forEach(function (e) {\n                var edge = g.edge(e);\n                var nodeU = g.node(e.v);\n                result_1.sum += (edge.weight * nodeU.order);\n                result_1.weight += edge.weight;\n            });\n            return {\n                v: v,\n                barycenter: result_1.sum / result_1.weight,\n                weight: result_1.weight\n            };\n        }\n    });\n};\nexports.default = barycenter;\n"},"sourceMaps":{"js":{"version":3,"file":"barycenter.js","sourceRoot":"","sources":["../../../../../src/layout/dagre/src/order/barycenter.ts"],"names":[],"mappings":";;AAEA,IAAM,UAAU,GAAG,UAAC,CAAQ,EAAE,OAAiB;IAC7C,OAAO,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC;QACnB,IAAM,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,CAAA,EAAE;YAChB,OAAO,EAAE,CAAC,GAAA,EAAE,CAAC;SACd;QAAE;YACD,IAAM,QAAM,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;YACrC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,CAAC,UAAC,CAAC;gBACb,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC;gBACxB,IAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;gBAC3B,QAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAO,GAAI,KAAK,CAAC,KAAgB,CAAC,CAAC;gBACvD,QAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAO,CAAC;YAChC,CAAC,CAAC,CAAC;YACH,OAAO;gBACL,CAAC,GAAA;gBACD,UAAU,EAAE,QAAM,CAAC,GAAG,GAAG,QAAM,CAAC,MAAM;gBACtC,MAAM,EAAE,QAAM,CAAC,MAAM;aACtB,CAAC;SACH;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe,UAAU,CAAC","sourcesContent":["import { Graph } from \"../../graph\";\n\nconst barycenter = (g: Graph, movable: string[]) => {\n  return movable.map((v) => {\n    const inV = g.inEdges(v);\n    if (!inV?.length) {\n      return { v };\n    }  {\n      const result = { sum: 0, weight: 0 };\n      inV?.forEach((e) => {\n        const edge = g.edge(e)!;\n        const nodeU = g.node(e.v)!;\n        result.sum += (edge.weight! * (nodeU.order as number));\n        result.weight += edge.weight!;\n      });\n      return {\n        v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n};\n\nexport default barycenter;\n\n"]}},"error":null,"hash":"b8217a11df994f28995088b501d4fafa","cacheData":{"env":{}}}