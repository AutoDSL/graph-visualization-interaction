{"id":"node_modules/@antv/layout/lib/layout/er/core.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\er\\core.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\src\\layout\\er\\core.ts","includedInParent":true,"mtime":499162500000},{"name":"D:\\myData\\前端\\doing\\AutoPL\\package.json","includedInParent":true,"mtime":1674182060254},{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\package.json","includedInParent":true,"mtime":1674179681168},{"name":"d3-force","loc":{"line":40,"column":35,"index":1661},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\er\\core.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\d3-force\\src\\index.js"},{"name":"./forceGrid","loc":{"line":41,"column":42,"index":1717},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\er\\core.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\er\\forceGrid.js"},{"name":"./mysqlWorkbench","loc":{"line":42,"column":47,"index":1781},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\er\\core.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\er\\mysqlWorkbench.js"},{"name":"../dagre","loc":{"line":43,"column":22,"index":1825},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\er\\core.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\dagre.js"}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar d3Force = __importStar(require(\"d3-force\"));\nvar forceGrid_1 = __importDefault(require(\"./forceGrid\"));\nvar mysqlWorkbench_1 = __importDefault(require(\"./mysqlWorkbench\"));\nvar dagre_1 = require(\"../dagre\");\nfunction layout(data, options) {\n    var nodes = data.nodes, edges = data.edges;\n    var width = options.width;\n    var height = options.height;\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length))\n        return Promise.resolve();\n    // 筛选非叶子节点，做Dagre布局\n    var noLeafNodes = [];\n    nodes.forEach(function (node) {\n        var relateEdges = edges.filter(function (edge) {\n            return edge.source === node.id || edge.target === node.id;\n        });\n        if (relateEdges.length > 1) {\n            var temp = __assign({}, node);\n            delete temp.size;\n            noLeafNodes.push(temp);\n        }\n    });\n    var noLeafEdge = [];\n    edges.forEach(function (edge) {\n        var sourceNode = noLeafNodes.find(function (node) { return node.id === edge.source; });\n        var targetNode = noLeafNodes.find(function (node) { return node.id === edge.target; });\n        if (sourceNode && targetNode) {\n            noLeafEdge.push(edge);\n        }\n    });\n    var graphLayout = new dagre_1.DagreLayout({\n        type: 'dagre',\n        ranksep: options.nodeMinGap,\n        nodesep: options.nodeMinGap,\n    });\n    var nodesTmp = graphLayout.layout({\n        nodes: noLeafNodes,\n        edges: noLeafEdge,\n    }).nodes;\n    // 布局后，坐标同步\n    nodes.forEach(function (n) {\n        var found = (nodesTmp || []).find(function (temp) { return temp.id === n.id; });\n        n.x = (found === null || found === void 0 ? void 0 : found.x) || width / 2;\n        n.y = (found === null || found === void 0 ? void 0 : found.y) || height / 2;\n    });\n    var copyNodes = JSON.parse(JSON.stringify(nodes));\n    var copyEdges = JSON.parse(JSON.stringify(edges));\n    var simulation = d3Force.forceSimulation().nodes(copyNodes)\n        .force(\"link\", d3Force.forceLink(copyEdges).id(function (d) { return d.id; }).distance(function (d) {\n        var edgeInfo = noLeafEdge.find(function (edge) { return edge.source === d.source && edge.target === d.target; });\n        if (edgeInfo) {\n            return 30;\n        }\n        return 20;\n    }))\n        .force(\"charge\", d3Force.forceManyBody())\n        .force(\"center\", d3Force.forceCenter(width / 2, height / 2))\n        .force(\"x\", d3Force.forceX(width / 2))\n        .force(\"y\", d3Force.forceY(height / 2))\n        .alpha(0.3)\n        .alphaDecay(0.08)\n        .alphaMin(0.001);\n    var layoutPromise = new Promise(function (resolve) {\n        simulation.on('end', function () {\n            // 坐标信息同步到nodes,edges中\n            nodes.forEach(function (node) {\n                var nodeInfo = copyNodes.find(function (item) { return item.id === node.id; });\n                if (nodeInfo) {\n                    node.x = nodeInfo.x;\n                    node.y = nodeInfo.y;\n                }\n            });\n            var minX = Math.min.apply(Math, nodes.map(function (node) { return node.x; }));\n            var maxX = Math.max.apply(Math, nodes.map(function (node) { return node.x; }));\n            var minY = Math.min.apply(Math, nodes.map(function (node) { return node.y; }));\n            var maxY = Math.max.apply(Math, nodes.map(function (node) { return node.y; }));\n            var scalex = width / (maxX - minX);\n            var scaley = height / (maxY - minY);\n            nodes.forEach(function (node) {\n                if (node.x !== undefined && scalex < 1) {\n                    node.x = (node.x - minX) * scalex;\n                }\n                if (node.y !== undefined && scaley < 1) {\n                    node.y = (node.y - minY) * scaley;\n                }\n            });\n            // 这一步就执行缩小空间。且不考虑节点size\n            nodes.forEach(function (node) {\n                node.sizeTemp = node.size;\n                node.size = [10, 10];\n            });\n            (0, mysqlWorkbench_1.default)(nodes, edges);\n            nodes.forEach(function (node) {\n                node.size = node.sizeTemp || [];\n                delete node.sizeTemp;\n            });\n            // 进行网格对齐+节点大小扩增\n            (0, forceGrid_1.default)({\n                nodes: nodes,\n                edges: edges,\n            }, options);\n            resolve();\n        });\n    });\n    return layoutPromise;\n}\nexports.default = layout;\n"},"sourceMaps":{"js":{"version":3,"file":"core.js","sourceRoot":"","sources":["../../../src/layout/er/core.ts"],"names":[],"mappings":"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","sourcesContent":["import * as d3Force from 'd3-force';\nimport forceGrid from './forceGrid';\nimport mysqlWorkbench from './mysqlWorkbench';\nimport { DagreLayout } from '../dagre';\nimport { INode, IEdge, } from \"./type\";\n\nexport default function layout(data: any, options: any): Promise<void> {\n  \n  const { nodes, edges } = data;\n  const width = options.width;\n  const height = options.height;\n  if (!nodes?.length) return Promise.resolve();\n\n  // 筛选非叶子节点，做Dagre布局\n  const noLeafNodes : INode[] = [];\n  nodes.forEach((node: any) => {\n    const relateEdges = edges.filter((edge: IEdge) => {\n      return edge.source === node.id || edge.target === node.id;\n    });\n    if (relateEdges.length > 1) {\n      const temp = { ...node };\n      delete temp.size;\n      noLeafNodes.push(temp);\n    }\n  });\n  const noLeafEdge: IEdge[] = [];\n  edges.forEach((edge: IEdge) => {\n    const sourceNode = noLeafNodes.find((node: INode) => node.id === edge.source );\n    const targetNode = noLeafNodes.find((node: INode) => node.id === edge.target );\n    if (sourceNode && targetNode) {\n      noLeafEdge.push(edge);\n    }\n  });\n  const graphLayout = new DagreLayout({\n    type: 'dagre',\n    ranksep: options.nodeMinGap,\n    nodesep: options.nodeMinGap,\n  });\n  \n  const { nodes: nodesTmp } = graphLayout.layout({\n    nodes: noLeafNodes,\n    edges: noLeafEdge,\n  });\n\n  // 布局后，坐标同步\n  nodes.forEach((n: INode) => {\n    const found = ((nodesTmp || []) as INode[]).find((temp: any) => temp.id === n.id);\n    n.x = found?.x || width / 2;\n    n.y = found?.y || height / 2;\n  });\n  \n  const copyNodes: INode[] = JSON.parse(JSON.stringify(nodes));\n  const copyEdges: IEdge[] = JSON.parse(JSON.stringify(edges));\n  const simulation = d3Force.forceSimulation().nodes(copyNodes)\n  .force(\"link\", d3Force.forceLink(copyEdges).id((d: any) => d.id).distance((d) => {\n    const edgeInfo = noLeafEdge.find((edge) => edge.source === d.source && edge.target === d.target);\n    if (edgeInfo) {\n      return 30;\n    }\n    return 20;\n  }))\n  .force(\"charge\", d3Force.forceManyBody())\n  .force(\"center\", d3Force.forceCenter(width / 2, height / 2))\n  .force(\"x\", d3Force.forceX(width / 2))\n  .force(\"y\", d3Force.forceY( height / 2))\n  .alpha(0.3)\n  .alphaDecay(0.08)\n  .alphaMin(0.001);\n\n  const layoutPromise = new Promise<void>((resolve) => {\n    simulation.on('end', () => {\n      // 坐标信息同步到nodes,edges中\n      nodes.forEach((node: INode) => {\n        const nodeInfo = copyNodes.find((item) => item.id === node.id);\n        if (nodeInfo) {\n          node.x = nodeInfo.x;\n          node.y = nodeInfo.y;\n        }\n      });\n      \n      const minX = Math.min(...nodes.map((node: INode) => node.x));\n      const maxX = Math.max(...nodes.map((node: INode) => node.x));\n      const minY = Math.min(...nodes.map((node: INode) => node.y));\n      const maxY = Math.max(...nodes.map((node: INode) => node.y));\n      const scalex = width / (maxX - minX);\n      const scaley = height / (maxY - minY);\n      nodes.forEach((node: INode) => {\n        if (node.x !== undefined && scalex < 1) {\n          node.x = (node.x - minX) * scalex;\n        }\n        if (node.y !== undefined && scaley < 1) {\n          node.y = (node.y - minY) * scaley;\n        }\n      });\n\n      // 这一步就执行缩小空间。且不考虑节点size\n      nodes.forEach((node: INode) => {\n        node.sizeTemp = node.size;\n        node.size = [10, 10];\n      });\n     \n      mysqlWorkbench(nodes, edges);\n      nodes.forEach((node: INode) => {\n        node.size = node.sizeTemp || [];\n        delete node.sizeTemp;\n      });\n      // 进行网格对齐+节点大小扩增\n      forceGrid({\n        nodes,\n        edges,\n      }, options);\n\n      resolve();\n    });\n  });\n  return layoutPromise;\n}\n"]}},"error":null,"hash":"91a9849c89959f384f914c5ee836d2af","cacheData":{"env":{}}}