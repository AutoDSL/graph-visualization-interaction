{"id":"node_modules/@antv/algorithm/lib/connected-component.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\package.json","includedInParent":true,"mtime":1676178924413},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\package.json","includedInParent":true,"mtime":1676178923049},{"name":"./util","loc":{"line":9,"column":20,"index":227},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\connected-component.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getConnectedComponents;\nexports.detectStrongConnectComponents = exports.detectConnectedComponents = void 0;\n\nvar _util = require(\"./util\");\n\n/**\n * Generate all connected components for an undirected graph\n * @param graph\n */\nvar detectConnectedComponents = function detectConnectedComponents(graphData) {\n  var _a = graphData.nodes,\n      nodes = _a === void 0 ? [] : _a,\n      _b = graphData.edges,\n      edges = _b === void 0 ? [] : _b;\n  var allComponents = [];\n  var visited = {};\n  var nodeStack = [];\n\n  var getComponent = function getComponent(node) {\n    nodeStack.push(node);\n    visited[node.id] = true;\n    var neighbors = (0, _util.getNeighbors)(node.id, edges);\n\n    var _loop_1 = function _loop_1(i) {\n      var neighbor = neighbors[i];\n\n      if (!visited[neighbor]) {\n        var targetNode = nodes.filter(function (node) {\n          return node.id === neighbor;\n        });\n\n        if (targetNode.length > 0) {\n          getComponent(targetNode[0]);\n        }\n      }\n    };\n\n    for (var i = 0; i < neighbors.length; ++i) {\n      _loop_1(i);\n    }\n  };\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n\n    if (!visited[node.id]) {\n      // 对于无向图进行dfs遍历，每一次调用后都得到一个连通分量\n      getComponent(node);\n      var component = [];\n\n      while (nodeStack.length > 0) {\n        component.push(nodeStack.pop());\n      }\n\n      allComponents.push(component);\n    }\n  }\n\n  return allComponents;\n};\n/**\n * Tarjan's Algorithm 复杂度  O(|V|+|E|)\n * For directed graph only\n * a directed graph is said to be strongly connected if \"every vertex is reachable from every other vertex\".\n * refer: http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\n * @param graph\n * @return a list of strongly connected components\n */\n\n\nexports.detectConnectedComponents = detectConnectedComponents;\n\nvar detectStrongConnectComponents = function detectStrongConnectComponents(graphData) {\n  var _a = graphData.nodes,\n      nodes = _a === void 0 ? [] : _a,\n      _b = graphData.edges,\n      edges = _b === void 0 ? [] : _b;\n  var nodeStack = [];\n  var inStack = {}; // 辅助判断是否已经在stack中，减少查找开销\n\n  var indices = {};\n  var lowLink = {};\n  var allComponents = [];\n  var index = 0;\n\n  var getComponent = function getComponent(node) {\n    // Set the depth index for v to the smallest unused index\n    indices[node.id] = index;\n    lowLink[node.id] = index;\n    index += 1;\n    nodeStack.push(node);\n    inStack[node.id] = true; // 考虑每个邻接点\n\n    var neighbors = (0, _util.getNeighbors)(node.id, edges, 'target').filter(function (n) {\n      return nodes.map(function (node) {\n        return node.id;\n      }).indexOf(n) > -1;\n    });\n\n    var _loop_2 = function _loop_2(i) {\n      var targetNodeID = neighbors[i];\n\n      if (!indices[targetNodeID] && indices[targetNodeID] !== 0) {\n        var targetNode = nodes.filter(function (node) {\n          return node.id === targetNodeID;\n        });\n\n        if (targetNode.length > 0) {\n          getComponent(targetNode[0]);\n        } // tree edge\n\n\n        lowLink[node.id] = Math.min(lowLink[node.id], lowLink[targetNodeID]);\n      } else if (inStack[targetNodeID]) {\n        // back edge, target node is in the current SCC\n        lowLink[node.id] = Math.min(lowLink[node.id], indices[targetNodeID]);\n      }\n    };\n\n    for (var i = 0; i < neighbors.length; i++) {\n      _loop_2(i);\n    } // If node is a root node, generate an SCC\n\n\n    if (lowLink[node.id] === indices[node.id]) {\n      var component = [];\n\n      while (nodeStack.length > 0) {\n        var tmpNode = nodeStack.pop();\n        inStack[tmpNode.id] = false;\n        component.push(tmpNode);\n        if (tmpNode === node) break;\n      }\n\n      if (component.length > 0) {\n        allComponents.push(component);\n      }\n    }\n  };\n\n  for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n    var node = nodes_1[_i];\n\n    if (!indices[node.id] && indices[node.id] !== 0) {\n      getComponent(node);\n    }\n  }\n\n  return allComponents;\n};\n\nexports.detectStrongConnectComponents = detectStrongConnectComponents;\n\nfunction getConnectedComponents(graphData, directed) {\n  if (directed) return detectStrongConnectComponents(graphData);\n  return detectConnectedComponents(graphData);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@antv/algorithm/lib/connected-component.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}}],"sources":{"node_modules/@antv/algorithm/lib/connected-component.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getConnectedComponents;\nexports.detectStrongConnectComponents = exports.detectConnectedComponents = void 0;\n\nvar _util = require(\"./util\");\n\n/**\n * Generate all connected components for an undirected graph\n * @param graph\n */\nvar detectConnectedComponents = function detectConnectedComponents(graphData) {\n  var _a = graphData.nodes,\n      nodes = _a === void 0 ? [] : _a,\n      _b = graphData.edges,\n      edges = _b === void 0 ? [] : _b;\n  var allComponents = [];\n  var visited = {};\n  var nodeStack = [];\n\n  var getComponent = function getComponent(node) {\n    nodeStack.push(node);\n    visited[node.id] = true;\n    var neighbors = (0, _util.getNeighbors)(node.id, edges);\n\n    var _loop_1 = function _loop_1(i) {\n      var neighbor = neighbors[i];\n\n      if (!visited[neighbor]) {\n        var targetNode = nodes.filter(function (node) {\n          return node.id === neighbor;\n        });\n\n        if (targetNode.length > 0) {\n          getComponent(targetNode[0]);\n        }\n      }\n    };\n\n    for (var i = 0; i < neighbors.length; ++i) {\n      _loop_1(i);\n    }\n  };\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n\n    if (!visited[node.id]) {\n      // 对于无向图进行dfs遍历，每一次调用后都得到一个连通分量\n      getComponent(node);\n      var component = [];\n\n      while (nodeStack.length > 0) {\n        component.push(nodeStack.pop());\n      }\n\n      allComponents.push(component);\n    }\n  }\n\n  return allComponents;\n};\n/**\n * Tarjan's Algorithm 复杂度  O(|V|+|E|)\n * For directed graph only\n * a directed graph is said to be strongly connected if \"every vertex is reachable from every other vertex\".\n * refer: http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\n * @param graph\n * @return a list of strongly connected components\n */\n\n\nexports.detectConnectedComponents = detectConnectedComponents;\n\nvar detectStrongConnectComponents = function detectStrongConnectComponents(graphData) {\n  var _a = graphData.nodes,\n      nodes = _a === void 0 ? [] : _a,\n      _b = graphData.edges,\n      edges = _b === void 0 ? [] : _b;\n  var nodeStack = [];\n  var inStack = {}; // 辅助判断是否已经在stack中，减少查找开销\n\n  var indices = {};\n  var lowLink = {};\n  var allComponents = [];\n  var index = 0;\n\n  var getComponent = function getComponent(node) {\n    // Set the depth index for v to the smallest unused index\n    indices[node.id] = index;\n    lowLink[node.id] = index;\n    index += 1;\n    nodeStack.push(node);\n    inStack[node.id] = true; // 考虑每个邻接点\n\n    var neighbors = (0, _util.getNeighbors)(node.id, edges, 'target').filter(function (n) {\n      return nodes.map(function (node) {\n        return node.id;\n      }).indexOf(n) > -1;\n    });\n\n    var _loop_2 = function _loop_2(i) {\n      var targetNodeID = neighbors[i];\n\n      if (!indices[targetNodeID] && indices[targetNodeID] !== 0) {\n        var targetNode = nodes.filter(function (node) {\n          return node.id === targetNodeID;\n        });\n\n        if (targetNode.length > 0) {\n          getComponent(targetNode[0]);\n        } // tree edge\n\n\n        lowLink[node.id] = Math.min(lowLink[node.id], lowLink[targetNodeID]);\n      } else if (inStack[targetNodeID]) {\n        // back edge, target node is in the current SCC\n        lowLink[node.id] = Math.min(lowLink[node.id], indices[targetNodeID]);\n      }\n    };\n\n    for (var i = 0; i < neighbors.length; i++) {\n      _loop_2(i);\n    } // If node is a root node, generate an SCC\n\n\n    if (lowLink[node.id] === indices[node.id]) {\n      var component = [];\n\n      while (nodeStack.length > 0) {\n        var tmpNode = nodeStack.pop();\n        inStack[tmpNode.id] = false;\n        component.push(tmpNode);\n        if (tmpNode === node) break;\n      }\n\n      if (component.length > 0) {\n        allComponents.push(component);\n      }\n    }\n  };\n\n  for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n    var node = nodes_1[_i];\n\n    if (!indices[node.id] && indices[node.id] !== 0) {\n      getComponent(node);\n    }\n  }\n\n  return allComponents;\n};\n\nexports.detectStrongConnectComponents = detectStrongConnectComponents;\n\nfunction getConnectedComponents(graphData, directed) {\n  if (directed) return detectStrongConnectComponents(graphData);\n  return detectConnectedComponents(graphData);\n}"},"lineCount":162}},"error":null,"hash":"763154db9dbe04a6ab849bc7496b9201","cacheData":{"env":{}}}