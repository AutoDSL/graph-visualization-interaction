{"id":"node_modules/@antv/layout/lib/layout/dagre/src/acyclic.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\lib\\layout\\dagre\\src\\acyclic.js.map","includedInParent":true,"mtime":1676178923494},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\src\\layout\\dagre\\src\\acyclic.ts","includedInParent":true,"mtime":1676178923786},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\package.json","includedInParent":true,"mtime":1676178924413},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\package.json","includedInParent":true,"mtime":1676178923486},{"name":"./greedy-fas","loc":{"line":6,"column":43,"index":259},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\lib\\layout\\dagre\\src\\acyclic.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\lib\\layout\\dagre\\src\\greedy-fas.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar greedy_fas_1 = __importDefault(require(\"./greedy-fas\"));\nvar run = function (g) {\n    var weightFn = function (g) {\n        return function (e) { var _a; return ((_a = g.edge(e)) === null || _a === void 0 ? void 0 : _a.weight) || 1; };\n    };\n    var fas = g.graph().acyclicer === \"greedy\" ? (0, greedy_fas_1.default)(g, weightFn(g)) : dfsFAS(g);\n    fas === null || fas === void 0 ? void 0 : fas.forEach(function (e) {\n        var label = g.edge(e);\n        g.removeEdgeObj(e);\n        label.forwardName = e.name;\n        label.reversed = true;\n        g.setEdge(e.w, e.v, label, \"rev-\".concat(Math.random()));\n    });\n};\nvar dfsFAS = function (g) {\n    var fas = [];\n    var stack = {};\n    var visited = {};\n    var dfs = function (v) {\n        var _a;\n        if (visited[v]) {\n            return;\n        }\n        visited[v] = true;\n        stack[v] = true;\n        (_a = g.outEdges(v)) === null || _a === void 0 ? void 0 : _a.forEach(function (e) {\n            if (stack[e.w]) {\n                fas.push(e);\n            }\n            else {\n                dfs(e.w);\n            }\n        });\n        delete stack[v];\n    };\n    g.nodes().forEach(dfs);\n    return fas;\n};\nvar undo = function (g) {\n    g.edges().forEach(function (e) {\n        var label = g.edge(e);\n        if (label.reversed) {\n            g.removeEdgeObj(e);\n            var forwardName = label.forwardName;\n            delete label.reversed;\n            delete label.forwardName;\n            g.setEdge(e.w, e.v, label, forwardName);\n        }\n    });\n};\nexports.default = { run: run, undo: undo };\n"},"sourceMaps":{"js":{"version":3,"file":"acyclic.js","sourceRoot":"","sources":["../../../../src/layout/dagre/src/acyclic.ts"],"names":[],"mappings":";;;;;AACA,4DAAqC;AAErC,IAAM,GAAG,GAAG,UAAC,CAAQ;IACnB,IAAM,QAAQ,GAAG,UAAC,CAAQ;QACxB,OAAO,UAAC,CAAO,YAAK,OAAA,CAAA,MAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,0CAAE,MAAM,KAAI,CAAC,CAAA,EAAA,CAAC;IAC7C,CAAC,CAAC;IACF,IAAM,GAAG,GACP,CAAC,CAAC,KAAK,EAAE,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAA,oBAAS,EAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3E,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,CAAC,UAAC,CAAO;QACnB,IAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC;QACzB,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACnB,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC;QAC3B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,cAAO,IAAI,CAAC,MAAM,EAAE,CAAE,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,IAAM,MAAM,GAAG,UAAC,CAAQ;IACtB,IAAM,GAAG,GAAW,EAAE,CAAC;IACvB,IAAM,KAAK,GAA4B,EAAE,CAAC;IAC1C,IAAM,OAAO,GAA4B,EAAE,CAAC;IAE5C,IAAM,GAAG,GAAG,UAAC,CAAS;;QACpB,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACd,OAAO;SACR;QACD,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAClB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAChB,MAAA,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,0CAAE,OAAO,CAAC,UAAC,CAAC;YACvB,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACd,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb;iBAAM;gBACL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC;IAEF,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvB,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,IAAM,IAAI,GAAG,UAAC,CAAQ;IACpB,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC;QAClB,IAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC;QACzB,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAEnB,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;YACtC,OAAO,KAAK,CAAC,QAAQ,CAAC;YACtB,OAAO,KAAK,CAAC,WAAW,CAAC;YACzB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;SACzC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe,EAAE,GAAG,KAAA,EAAE,IAAI,MAAA,EAAE,CAAC","sourcesContent":["import { Edge, Graph } from \"../graph\";\nimport greedyFAS from \"./greedy-fas\";\n\nconst run = (g: Graph) => {\n  const weightFn = (g: Graph) => {\n    return (e: Edge) => g.edge(e)?.weight || 1;\n  };\n  const fas =\n    g.graph().acyclicer === \"greedy\" ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  fas?.forEach((e: Edge) => {\n    const label = g.edge(e)!;\n    g.removeEdgeObj(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, `rev-${Math.random()}`);\n  });\n};\n\nconst dfsFAS = (g: Graph) => {\n  const fas: Edge[] = [];\n  const stack: Record<string, boolean> = {};\n  const visited: Record<string, boolean> = {};\n\n  const dfs = (v: string) => {\n    if (visited[v]) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    g.outEdges(v)?.forEach((e) => {\n      if (stack[e.w]) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  };\n\n  g.nodes().forEach(dfs);\n  return fas;\n};\n\nconst undo = (g: Graph) => {\n  g.edges().forEach((e) => {\n    const label = g.edge(e)!;\n    if (label.reversed) {\n      g.removeEdgeObj(e);\n\n      const forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n};\n\nexport default { run, undo };\n"]}},"error":null,"hash":"1788d0d84002fcd48ede714c6a4b2fe8","cacheData":{"env":{}}}