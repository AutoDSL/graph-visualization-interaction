{"id":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\AutoPL\\package.json","includedInParent":true,"mtime":1674182060254},{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\algorithm\\package.json","includedInParent":true,"mtime":1674179681169},{"name":"@antv/util","loc":{"line":8,"column":20,"index":127},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\algorithm\\lib\\gSpan\\gSpan.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\util\\esm\\index.js"},{"name":"./struct","loc":{"line":10,"column":22,"index":165},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\algorithm\\lib\\gSpan\\gSpan.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\algorithm\\lib\\gSpan\\struct.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@antv/util\");\n\nvar _struct = require(\"./struct\");\n\nvar DFSedge =\n/** @class */\nfunction () {\n  function DFSedge(fromNode, toNode, fromNodeLabel, edgeLabel, toNodeLabel) {\n    this.fromNode = fromNode;\n    this.toNode = toNode;\n    this.nodeEdgeNodeLabel = {\n      nodeLabel1: fromNodeLabel || _struct.VACANT_NODE_LABEL,\n      edgeLabel: edgeLabel || _struct.VACANT_EDGE_LABEL,\n      nodeLabel2: toNodeLabel || _struct.VACANT_NODE_LABEL\n    };\n  }\n\n  DFSedge.prototype.equalTo = function (other) {\n    return this.fromNode === other.formNode && this.toNode === other.toNode && this.nodeEdgeNodeLabel === other.nodeEdgeNodeLabel;\n  };\n\n  DFSedge.prototype.notEqualTo = function (other) {\n    return !this.equalTo(other);\n  };\n\n  return DFSedge;\n}(); // DFScode 是 DESedge 的数组\n\n\nvar DFScode =\n/** @class */\nfunction () {\n  function DFScode() {\n    this.rmpath = [];\n    this.dfsEdgeList = [];\n  }\n\n  DFScode.prototype.equalTo = function (other) {\n    var aLength = this.dfsEdgeList.length;\n    var bLength = other.length;\n    if (aLength !== bLength) return false;\n\n    for (var i = 0; i < aLength; i++) {\n      if (this.dfsEdgeList[i] !== other[i]) return false;\n    }\n\n    return true;\n  };\n\n  DFScode.prototype.notEqualTo = function (other) {\n    return !this.equalTo(other);\n  };\n  /** 增加一条 edge 到 DFScode */\n\n\n  DFScode.prototype.pushBack = function (fromNode, toNode, fromNodeLabel, edgeLabel, toNodeLabel) {\n    this.dfsEdgeList.push(new DFSedge(fromNode, toNode, fromNodeLabel, edgeLabel, toNodeLabel));\n    return this.dfsEdgeList;\n  };\n  /** 根据 dfs 构建图 */\n\n\n  DFScode.prototype.toGraph = function (graphId, directed) {\n    if (graphId === void 0) {\n      graphId = _struct.VACANT_GRAPH_ID;\n    }\n\n    if (directed === void 0) {\n      directed = false;\n    }\n\n    var graph = new _struct.Graph(graphId, true, directed);\n    this.dfsEdgeList.forEach(function (dfsEdge) {\n      var fromNodeId = dfsEdge.fromNode;\n      var toNodeId = dfsEdge.toNode;\n      var _a = dfsEdge.nodeEdgeNodeLabel,\n          nodeLabel1 = _a.nodeLabel1,\n          edgeLabel = _a.edgeLabel,\n          nodeLabel2 = _a.nodeLabel2;\n      if (nodeLabel1 !== _struct.VACANT_NODE_LABEL) graph.addNode(fromNodeId, nodeLabel1);\n      if (nodeLabel2 !== _struct.VACANT_NODE_LABEL) graph.addNode(toNodeId, nodeLabel2);\n      if (nodeLabel1 !== _struct.VACANT_NODE_LABEL && nodeLabel2 !== nodeLabel1) graph.addEdge(undefined, fromNodeId, toNodeId, edgeLabel);\n    });\n    return graph;\n  }; // 建立 rightmost path\n\n\n  DFScode.prototype.buildRmpath = function () {\n    this.rmpath = [];\n    var oldFrom = undefined;\n    var selfLength = this.dfsEdgeList.length;\n\n    for (var i = selfLength - 1; i >= 0; i--) {\n      var dfsEdge = this.dfsEdgeList[i];\n      var fromNodeIdx = dfsEdge.fromNode;\n      var toNodeIdx = dfsEdge.toNode;\n\n      if (fromNodeIdx < toNodeIdx && (oldFrom === undefined || toNodeIdx === oldFrom)) {\n        this.rmpath.push(i);\n        oldFrom = fromNodeIdx;\n      }\n    }\n\n    return this.rmpath;\n  };\n\n  DFScode.prototype.getNodeNum = function () {\n    var nodeMap = {};\n    this.dfsEdgeList.forEach(function (dfsEdge) {\n      if (!nodeMap[dfsEdge.fromNode]) nodeMap[dfsEdge.fromNode] = true;\n      if (!nodeMap[dfsEdge.toNode]) nodeMap[dfsEdge.toNode] = true;\n    });\n    return Object.keys(nodeMap).length;\n  };\n\n  return DFScode;\n}();\n\nvar History =\n/** @class */\nfunction () {\n  function History(pdfs) {\n    this.his = {};\n    this.nodesUsed = {};\n    this.edgesUsed = {};\n    this.edges = [];\n    if (!pdfs) return;\n\n    while (pdfs) {\n      var e = pdfs.edge;\n      this.edges.push(e);\n      this.nodesUsed[e.from] = 1;\n      this.nodesUsed[e.to] = 1;\n      this.edgesUsed[e.id] = 1;\n      pdfs = pdfs.preNode;\n    } // 倒序\n\n\n    this.edges = this.edges.reverse();\n  }\n\n  History.prototype.hasNode = function (node) {\n    return this.nodesUsed[node.id] === 1;\n  };\n\n  History.prototype.hasEdge = function (edge) {\n    return this.edgesUsed[edge.id] === 1;\n  };\n\n  return History;\n}();\n\nvar GSpan =\n/** @class */\nfunction () {\n  function GSpan(_a) {\n    var graphs = _a.graphs,\n        _b = _a.minSupport,\n        minSupport = _b === void 0 ? 2 : _b,\n        _c = _a.minNodeNum,\n        minNodeNum = _c === void 0 ? 1 : _c,\n        _d = _a.maxNodeNum,\n        maxNodeNum = _d === void 0 ? 4 : _d,\n        _e = _a.top,\n        top = _e === void 0 ? 10 : _e,\n        _f = _a.directed,\n        directed = _f === void 0 ? false : _f,\n        _g = _a.verbose,\n        verbose = _g === void 0 ? false : _g; // -------- 第零步，初始化-------\n\n    this.graphs = graphs;\n    this.dfsCode = new DFScode();\n    this.support = 0;\n    this.frequentSize1Subgraphs = [];\n    this.frequentSubgraphs = [];\n    this.minSupport = minSupport;\n    this.top = top;\n    this.directed = directed;\n    this.counter = 0; // TODO? timestamp = {}\n\n    this.maxNodeNum = maxNodeNum;\n    this.minNodeNum = minNodeNum;\n    this.verbose = verbose;\n    if (this.maxNodeNum < this.minNodeNum) this.maxNodeNum = this.minNodeNum;\n    this.reportDF = []; // matrix\n  } // Line 352\n\n\n  GSpan.prototype.findForwardRootEdges = function (graph, fromNode) {\n    var _this = this;\n\n    var result = [];\n    var nodeMap = graph.nodeMap;\n    fromNode.edges.forEach(function (edge) {\n      if (_this.directed || fromNode.label <= nodeMap[edge.to].label) result.push(edge);\n    });\n    return result;\n  };\n\n  GSpan.prototype.findBackwardEdge = function (graph, edge1, edge2, history) {\n    if (!this.directed && edge1 === edge2) return null;\n    var nodeMap = graph.nodeMap;\n    var edge2To = nodeMap[edge2.to];\n    var edge2ToEdges = edge2To.edges;\n    var edgeLength = edge2ToEdges.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edge2ToEdges[i];\n      if (history.hasEdge(edge) || edge.to !== edge1.from) continue;\n\n      if (!this.directed) {\n        if (edge1.label < edge.label || edge1.label === edge.label && nodeMap[edge1.to].label <= nodeMap[edge2.to].label) {\n          return edge;\n        }\n      } else {\n        if (nodeMap[edge1.from].label < nodeMap[edge2.to].label || nodeMap[edge1.from].label === nodeMap[edge2.to].label && edge1.label <= edge.label) {\n          return edge;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  GSpan.prototype.findForwardPureEdges = function (graph, rightmostEdge, minNodeLabel, history) {\n    var result = [];\n    var rightmostEdgeToId = rightmostEdge.to;\n    var edges = graph.nodeMap[rightmostEdgeToId].edges;\n    var edgeLength = edges.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      var toNode = graph.nodeMap[edge.to];\n\n      if (minNodeLabel <= toNode.label && !history.hasNode(toNode)) {\n        result.push(edge);\n      }\n    }\n\n    return result;\n  };\n\n  GSpan.prototype.findForwardRmpathEdges = function (graph, rightmostEdge, minNodeLabel, history) {\n    var result = [];\n    var nodeMap = graph.nodeMap;\n    var toNodeLabel = nodeMap[rightmostEdge.to].label;\n    var fromNode = nodeMap[rightmostEdge.from];\n    var edges = fromNode.edges;\n    var edgeLength = edges.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      var newToNodeLabel = nodeMap[edge.to].label;\n\n      if (rightmostEdge.to === edge.to || minNodeLabel > newToNodeLabel || history.hasNode(nodeMap[edge.to])) {\n        continue;\n      }\n\n      if (rightmostEdge.label < edge.label || rightmostEdge.label === edge.label && toNodeLabel <= newToNodeLabel) {\n        result.push(edge);\n      }\n    }\n\n    return result;\n  };\n\n  GSpan.prototype.getSupport = function (projected) {\n    var graphMap = {};\n    projected.forEach(function (pro) {\n      if (!graphMap[pro.graphId]) graphMap[pro.graphId] = true;\n    });\n    return Object.keys(graphMap).length;\n  };\n\n  GSpan.prototype.findMinLabel = function (obj) {\n    var minLabel = undefined;\n    Object.keys(obj).forEach(function (nodeEdgeNodeLabel) {\n      var _a = obj[nodeEdgeNodeLabel],\n          nodeLabel1 = _a.nodeLabel1,\n          edgeLabel = _a.edgeLabel,\n          nodeLabel2 = _a.nodeLabel2;\n\n      if (!minLabel) {\n        minLabel = {\n          nodeLabel1: nodeLabel1,\n          edgeLabel: edgeLabel,\n          nodeLabel2: nodeLabel2\n        };\n        return;\n      }\n\n      if (nodeLabel1 < minLabel.nodeLabel1 || nodeLabel1 === minLabel.nodeLabel1 && edgeLabel < minLabel.edgeLabel || nodeLabel1 === minLabel.nodeLabel1 && edgeLabel === minLabel.edgeLabel && nodeLabel2 < minLabel.nodeLabel2) {\n        minLabel = {\n          nodeLabel1: nodeLabel1,\n          edgeLabel: edgeLabel,\n          nodeLabel2: nodeLabel2\n        };\n      }\n    });\n    return minLabel;\n  };\n\n  GSpan.prototype.isMin = function () {\n    var _this = this;\n\n    var dfsCode = this.dfsCode;\n    if (this.verbose) console.log(\"isMin checking\", dfsCode);\n    if (dfsCode.dfsEdgeList.length === 1) return true;\n    var directed = this.directed;\n    var graph = dfsCode.toGraph(_struct.VACANT_GRAPH_ID, directed);\n    var nodeMap = graph.nodeMap;\n    var dfsCodeMin = new DFScode();\n    var root = {};\n    graph.nodes.forEach(function (node) {\n      var forwardEdges = _this.findForwardRootEdges(graph, node);\n\n      forwardEdges.forEach(function (edge) {\n        var otherNode = nodeMap[edge.to];\n        var nodeEdgeNodeLabel = \"\".concat(node.label, \"-\").concat(edge.label, \"-\").concat(otherNode.label);\n        if (!root[nodeEdgeNodeLabel]) root[nodeEdgeNodeLabel] = {\n          projected: [],\n          nodeLabel1: node.label,\n          edgeLabel: edge.label,\n          nodeLabel2: otherNode.label\n        };\n        var pdfs = {\n          graphId: graph.id,\n          edge: edge,\n          preNode: null\n        };\n        root[nodeEdgeNodeLabel].projected.push(pdfs);\n      });\n    }); // 比较 root 中每一项的 nodeEdgeNodeLabel 大小，按照 nodeLabel1、edgeLabe、nodeLabel2 的顺序比较\n\n    var minLabel = this.findMinLabel(root); // line 419\n\n    if (!minLabel) return;\n    dfsCodeMin.dfsEdgeList.push(new DFSedge(0, 1, minLabel.nodeLabel1, minLabel.edgeLabel, minLabel.nodeLabel2)); // line 423\n\n    var projectIsMin = function projectIsMin(projected) {\n      // right most path\n      var rmpath = dfsCodeMin.buildRmpath();\n      var minNodeLabel = dfsCodeMin.dfsEdgeList[0].nodeEdgeNodeLabel.nodeLabel1;\n      var maxToC = dfsCodeMin.dfsEdgeList[rmpath[0]].toNode; // node id\n\n      var backwardRoot = {};\n      var flag = false,\n          newTo = 0;\n      var end = directed ? -1 : 0; // 遍历到 1 还是到 0\n\n      var _loop_1 = function _loop_1(i) {\n        if (flag) return \"break\"; // line 435\n\n        projected.forEach(function (p) {\n          var history = new History(p);\n\n          var backwardEdge = _this.findBackwardEdge(graph, history.edges[rmpath[i]], history.edges[rmpath[0]], history);\n\n          if (backwardEdge) {\n            // Line 441\n            if (!backwardRoot[backwardEdge.label]) {\n              backwardRoot[backwardEdge.label] = {\n                projected: [],\n                edgeLabel: backwardEdge.label\n              };\n            }\n\n            backwardRoot[backwardEdge.label].projected.push({\n              graphId: graph.id,\n              edge: backwardRoot,\n              preNode: p\n            });\n            newTo = dfsCodeMin.dfsEdgeList[rmpath[i]].fromNode;\n            flag = true;\n          }\n        });\n      };\n\n      for (var i = rmpath.length - 1; i > end; i--) {\n        var state_1 = _loop_1(i);\n\n        if (state_1 === \"break\") break;\n      }\n\n      if (flag) {\n        var minBackwardEdgeLabel = _this.findMinLabel(backwardRoot);\n\n        dfsCodeMin.dfsEdgeList.push(new DFSedge(maxToC, newTo, _struct.VACANT_NODE_LABEL, minBackwardEdgeLabel.edgeLabel, _struct.VACANT_NODE_LABEL));\n        var idx_1 = dfsCodeMin.dfsEdgeList.length - 1;\n        if (_this.dfsCode.dfsEdgeList[idx_1] !== dfsCodeMin.dfsEdgeList[idx_1]) return false;\n        return projectIsMin(backwardRoot[minBackwardEdgeLabel.edgeLabel].projected);\n      }\n\n      var forwardRoot = {};\n      flag = false;\n      var newFrom = 0;\n      projected.forEach(function (p) {\n        var history = new History(p);\n\n        var forwardPureEdges = _this.findForwardPureEdges(graph, history.edges[rmpath[0]], minNodeLabel, history);\n\n        if (forwardPureEdges.length > 0) {\n          flag = true;\n          newFrom = maxToC;\n          forwardPureEdges.forEach(function (edge) {\n            var key = \"\".concat(edge.label, \"-\").concat(nodeMap[edge.to].label);\n            if (!forwardRoot[key]) forwardRoot[key] = {\n              projected: [],\n              edgeLabel: edge.label,\n              nodeLabel2: nodeMap[edge.to].label\n            };\n            forwardRoot[key].projected.push({\n              graphId: graph.id,\n              edge: edge,\n              preNode: p\n            });\n          });\n        }\n      });\n      var pathLength = rmpath.length;\n\n      var _loop_2 = function _loop_2(i) {\n        if (flag) return \"break\";\n        var value = rmpath[i];\n        projected.forEach(function (p) {\n          var history = new History(p);\n\n          var forwardRmpathEdges = _this.findForwardRmpathEdges(graph, history.edges[value], minNodeLabel, history);\n\n          if (forwardRmpathEdges.length > 0) {\n            flag = true;\n            newFrom = dfsCodeMin.dfsEdgeList[value].fromNode;\n            forwardRmpathEdges.forEach(function (edge) {\n              var key = \"\".concat(edge.label, \"-\").concat(nodeMap[edge.to].label);\n              if (!forwardRoot[key]) forwardRoot[key] = {\n                projected: [],\n                edgeLabel: edge.label,\n                nodeLabel2: nodeMap[edge.to].label\n              };\n              forwardRoot[key].projected.push({\n                graphId: graph.id,\n                edge: edge,\n                preNode: p\n              });\n            });\n          }\n        });\n      };\n\n      for (var i = 0; i < pathLength; i++) {\n        var state_2 = _loop_2(i);\n\n        if (state_2 === \"break\") break;\n      }\n\n      if (!flag) return true;\n\n      var forwardMinEdgeNodeLabel = _this.findMinLabel(forwardRoot);\n\n      dfsCodeMin.dfsEdgeList.push(new DFSedge(newFrom, maxToC + 1, _struct.VACANT_NODE_LABEL, forwardMinEdgeNodeLabel.edgeLabel, forwardMinEdgeNodeLabel.nodeLabel2));\n      var idx = dfsCodeMin.dfsEdgeList.length - 1;\n      if (dfsCode.dfsEdgeList[idx] !== dfsCodeMin.dfsEdgeList[idx]) return false;\n      return projectIsMin(forwardRoot[\"\".concat(forwardMinEdgeNodeLabel.edgeLabel, \"-\").concat(forwardMinEdgeNodeLabel.nodeLabel2)].projected);\n    };\n\n    var key = \"\".concat(minLabel.nodeLabel1, \"-\").concat(minLabel.edgeLabel, \"-\").concat(minLabel.nodeLabel2);\n    return projectIsMin(root[key].projected);\n  };\n\n  GSpan.prototype.report = function () {\n    if (this.dfsCode.getNodeNum() < this.minNodeNum) return;\n    this.counter++;\n    var graph = this.dfsCode.toGraph(this.counter, this.directed);\n    this.frequentSubgraphs.push((0, _util.clone)(graph));\n  };\n\n  GSpan.prototype.subGraphMining = function (projected) {\n    var _this = this;\n\n    var support = this.getSupport(projected);\n    if (support < this.minSupport) return;\n    if (!this.isMin()) return;\n    this.report();\n    var nodeNum = this.dfsCode.getNodeNum();\n    var rmpath = this.dfsCode.buildRmpath();\n    var maxToC = this.dfsCode.dfsEdgeList[rmpath[0]].toNode;\n    var minNodeLabel = this.dfsCode.dfsEdgeList[0].nodeEdgeNodeLabel.nodeLabel1;\n    var forwardRoot = {};\n    var backwardRoot = {};\n    projected.forEach(function (p) {\n      var graph = _this.graphs[p.graphId];\n      var nodeMap = graph.nodeMap;\n      var history = new History(p); // backward Line 526\n\n      for (var i = rmpath.length - 1; i >= 0; i--) {\n        var backwardEdge = _this.findBackwardEdge(graph, history.edges[rmpath[i]], history.edges[rmpath[0]], history);\n\n        if (backwardEdge) {\n          var key = \"\".concat(_this.dfsCode.dfsEdgeList[rmpath[i]].fromNode, \"-\").concat(backwardEdge.label);\n          if (!backwardRoot[key]) backwardRoot[key] = {\n            projected: [],\n            toNodeId: _this.dfsCode.dfsEdgeList[rmpath[i]].fromNode,\n            edgeLabel: backwardEdge.label\n          };\n          backwardRoot[key].projected.push({\n            graphId: p.graphId,\n            edge: backwardEdge,\n            preNode: p\n          });\n        }\n      } // pure forward\n\n\n      if (nodeNum >= _this.maxNodeNum) return;\n\n      var forwardPureEdges = _this.findForwardPureEdges(graph, history.edges[rmpath[0]], minNodeLabel, history);\n\n      forwardPureEdges.forEach(function (edge) {\n        var key = \"\".concat(maxToC, \"-\").concat(edge.label, \"-\").concat(nodeMap[edge.to].label);\n        if (!forwardRoot[key]) forwardRoot[key] = {\n          projected: [],\n          fromNodeId: maxToC,\n          edgeLabel: edge.label,\n          nodeLabel2: nodeMap[edge.to].label\n        };\n        forwardRoot[key].projected.push({\n          graphId: p.graphId,\n          edge: edge,\n          preNode: p\n        });\n      });\n\n      var _loop_3 = function _loop_3(i) {\n        var forwardRmpathEdges = _this.findForwardRmpathEdges(graph, history.edges[rmpath[i]], minNodeLabel, history);\n\n        forwardRmpathEdges.forEach(function (edge) {\n          var key = \"\".concat(_this.dfsCode.dfsEdgeList[rmpath[i]].fromNode, \"-\").concat(edge.label, \"-\").concat(nodeMap[edge.to].label);\n          if (!forwardRoot[key]) forwardRoot[key] = {\n            projected: [],\n            fromNodeId: _this.dfsCode.dfsEdgeList[rmpath[i]].fromNode,\n            edgeLabel: edge.label,\n            nodeLabel2: nodeMap[edge.to].label\n          };\n          forwardRoot[key].projected.push({\n            graphId: p.graphId,\n            edge: edge,\n            preNode: p\n          });\n        });\n      }; // rmpath forward\n\n\n      for (var i = 0; i < rmpath.length; i++) {\n        _loop_3(i);\n      }\n    }); // backward\n\n    Object.keys(backwardRoot).forEach(function (key) {\n      var _a = backwardRoot[key],\n          toNodeId = _a.toNodeId,\n          edgeLabel = _a.edgeLabel;\n\n      _this.dfsCode.dfsEdgeList.push(new DFSedge(maxToC, toNodeId, \"-1\", edgeLabel, \"-1\"));\n\n      _this.subGraphMining(backwardRoot[key].projected);\n\n      _this.dfsCode.dfsEdgeList.pop();\n    }); // forward\n\n    Object.keys(forwardRoot).forEach(function (key) {\n      var _a = forwardRoot[key],\n          fromNodeId = _a.fromNodeId,\n          edgeLabel = _a.edgeLabel,\n          nodeLabel2 = _a.nodeLabel2;\n\n      _this.dfsCode.dfsEdgeList.push(new DFSedge(fromNodeId, maxToC + 1, _struct.VACANT_NODE_LABEL, edgeLabel, nodeLabel2));\n\n      _this.subGraphMining(forwardRoot[key].projected);\n\n      _this.dfsCode.dfsEdgeList.pop();\n    });\n  };\n\n  GSpan.prototype.generate1EdgeFrequentSubGraphs = function () {\n    var graphs = this.graphs;\n    var directed = this.directed;\n    var minSupport = this.minSupport;\n    var frequentSize1Subgraphs = this.frequentSize1Subgraphs;\n    var nodeLabelCounter = {},\n        nodeEdgeNodeCounter = {}; // 保存各个图和各自节点的关系 map，key 格式为 graphKey-node类型\n\n    var nodeLableCounted = {}; // 保存各个图和各自边的关系 map，key 格式为 graphKey-fromNode类型-edge类型-toNode类型\n\n    var nodeEdgeNodeLabelCounted = {};\n    Object.keys(graphs).forEach(function (key) {\n      // Line 271\n      var graph = graphs[key];\n      var nodeMap = graph.nodeMap; // 遍历节点，记录对应图 与 每个节点的 label 到 nodeLableCounted\n\n      graph.nodes.forEach(function (node, i) {\n        // Line 272\n        var nodeLabel = node.label;\n        var graphNodeKey = \"\".concat(key, \"-\").concat(nodeLabel);\n\n        if (!nodeLableCounted[graphNodeKey]) {\n          var counter = nodeLabelCounter[nodeLabel] || 0;\n          counter++;\n          nodeLabelCounter[nodeLabel] = counter;\n        }\n\n        nodeLableCounted[graphNodeKey] = {\n          graphKey: key,\n          label: nodeLabel\n        }; // 遍历该节点的所有边，记录各个图和各自边的关系到 nodeEdgeNodeLabelCounted. Line 276\n\n        node.edges.forEach(function (edge) {\n          var nodeLabel1 = nodeLabel;\n          var nodeLabel2 = nodeMap[edge.to].label;\n\n          if (!directed && nodeLabel1 > nodeLabel2) {\n            var tmp = nodeLabel2;\n            nodeLabel2 = nodeLabel1;\n            nodeLabel1 = tmp;\n          }\n\n          var edgeLabel = edge.label;\n          var graphNodeEdgeNodeKey = \"\".concat(key, \"-\").concat(nodeLabel1, \"-\").concat(edgeLabel, \"-\").concat(nodeLabel2);\n          var nodeEdgeNodeKey = \"\".concat(nodeLabel1, \"-\").concat(edgeLabel, \"-\").concat(nodeLabel2);\n\n          if (!nodeEdgeNodeCounter[nodeEdgeNodeKey]) {\n            var counter = nodeEdgeNodeCounter[nodeEdgeNodeKey] || 0;\n            counter++;\n            nodeEdgeNodeCounter[nodeEdgeNodeKey] = counter; // Line281\n          }\n\n          nodeEdgeNodeLabelCounted[graphNodeEdgeNodeKey] = {\n            graphId: key,\n            nodeLabel1: nodeLabel1,\n            edgeLabel: edgeLabel,\n            nodeLabel2: nodeLabel2\n          };\n        });\n      });\n    }); // 计算频繁的节点\n\n    Object.keys(nodeLabelCounter).forEach(function (label) {\n      var count = nodeLabelCounter[label];\n      if (count < minSupport) return;\n      var g = {\n        nodes: [],\n        edges: []\n      };\n      g.nodes.push({\n        id: \"0\",\n        label: label\n      });\n      frequentSize1Subgraphs.push(g); // if (minNodeNum <= 1) reportSize1 TODO\n    });\n    return frequentSize1Subgraphs;\n  };\n\n  GSpan.prototype.run = function () {\n    var _this = this; // -------- 第一步, _generate_1edge_frequent_subgraphs：频繁的单个节点-------\n\n\n    this.frequentSize1Subgraphs = this.generate1EdgeFrequentSubGraphs();\n    if (this.maxNodeNum < 2) return;\n    var graphs = this.graphs;\n    var directed = this.directed; // PDFS 数组的 map Line 304\n\n    var root = {};\n    Object.keys(graphs).forEach(function (graphId) {\n      var graph = graphs[graphId];\n      var nodeMap = graph.nodeMap; // Line 306\n\n      graph.nodes.forEach(function (node) {\n        var forwardRootEdges = _this.findForwardRootEdges(graph, node); // Line 308\n\n\n        forwardRootEdges.forEach(function (edge) {\n          var toNode = nodeMap[edge.to];\n          var nodeEdgeNodeLabel = \"\".concat(node.label, \"-\").concat(edge.label, \"-\").concat(toNode.label);\n          if (!root[nodeEdgeNodeLabel]) root[nodeEdgeNodeLabel] = {\n            projected: [],\n            nodeLabel1: node.label,\n            edgeLabel: edge.label,\n            nodeLabel2: toNode.label\n          };\n          var pdfs = {\n            graphId: graphId,\n            edge: edge,\n            preNode: null\n          };\n          root[nodeEdgeNodeLabel].projected.push(pdfs);\n        });\n      });\n    }); // Line 313\n\n    Object.keys(root).forEach(function (nodeEdgeNodeLabel) {\n      var _a = root[nodeEdgeNodeLabel],\n          projected = _a.projected,\n          nodeLabel1 = _a.nodeLabel1,\n          edgeLabel = _a.edgeLabel,\n          nodeLabel2 = _a.nodeLabel2;\n\n      _this.dfsCode.dfsEdgeList.push(new DFSedge(0, 1, nodeLabel1, edgeLabel, nodeLabel2));\n\n      _this.subGraphMining(projected);\n\n      _this.dfsCode.dfsEdgeList.pop();\n    });\n  };\n\n  return GSpan;\n}();\n\nvar formatGraphs = function formatGraphs(graphs, directed, nodeLabelProp, edgeLabelProp) {\n  var result = {};\n  Object.keys(graphs).forEach(function (key, i) {\n    var graph = graphs[key];\n    var fGraph = new _struct.Graph(i, true, directed);\n    var nodeIdxMap = {};\n    graph.nodes.forEach(function (node, j) {\n      fGraph.addNode(j, node[nodeLabelProp]);\n      nodeIdxMap[node.id] = j;\n    });\n    graph.edges.forEach(function (edge, k) {\n      var sourceIdx = nodeIdxMap[edge.source];\n      var targetIdx = nodeIdxMap[edge.target];\n      fGraph.addEdge(-1, sourceIdx, targetIdx, edge[edgeLabelProp]);\n    });\n    if (fGraph && fGraph.getNodeNum()) result[fGraph.id] = fGraph;\n  });\n  return result;\n};\n\nvar toGraphDatas = function toGraphDatas(graphs, nodeLabelProp, edgeLabelProp) {\n  var result = [];\n  graphs.forEach(function (graph) {\n    var graphData = {\n      nodes: [],\n      edges: []\n    };\n    graph.nodes.forEach(function (node) {\n      var _a;\n\n      graphData.nodes.push((_a = {\n        id: \"\".concat(node.id)\n      }, _a[nodeLabelProp] = node.label, _a));\n    });\n    graph.edges.forEach(function (edge) {\n      var _a;\n\n      graphData.edges.push((_a = {\n        source: \"\".concat(edge.from),\n        target: \"\".concat(edge.to)\n      }, _a[edgeLabelProp] = edge.label, _a));\n    });\n    result.push(graphData);\n  });\n  return result;\n};\n\nvar DEFAULT_LABEL_NAME = \"cluster\";\n/**\n * gSpan 频繁子图计算算法（frequent graph mining）\n * @param params 参数\n */\n\nvar gSpan = function gSpan(params) {\n  // ------- 将图数据 GraphData 的 map 转换为格式 -------\n  var graphs = params.graphs,\n      _a = params.directed,\n      directed = _a === void 0 ? false : _a,\n      _b = params.nodeLabelProp,\n      nodeLabelProp = _b === void 0 ? DEFAULT_LABEL_NAME : _b,\n      _c = params.edgeLabelProp,\n      edgeLabelProp = _c === void 0 ? DEFAULT_LABEL_NAME : _c;\n  var formattedGraphs = formatGraphs(graphs, directed, nodeLabelProp, edgeLabelProp);\n  var minSupport = params.minSupport,\n      maxNodeNum = params.maxNodeNum,\n      minNodeNum = params.minNodeNum,\n      verbose = params.verbose,\n      top = params.top; // ------- 初始化与执行算法 -------\n\n  var algoParams = {\n    graphs: formattedGraphs,\n    minSupport: minSupport,\n    maxNodeNum: maxNodeNum,\n    minNodeNum: minNodeNum,\n    top: top,\n    verbose: verbose,\n    directed: directed\n  };\n  var calculator = new GSpan(algoParams);\n  calculator.run();\n  var result = toGraphDatas(calculator.frequentSubgraphs, nodeLabelProp, edgeLabelProp);\n  return result;\n};\n\nvar _default = gSpan;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/@antv/algorithm/lib/gSpan/gSpan.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}}],"sources":{"node_modules/@antv/algorithm/lib/gSpan/gSpan.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@antv/util\");\n\nvar _struct = require(\"./struct\");\n\nvar DFSedge =\n/** @class */\nfunction () {\n  function DFSedge(fromNode, toNode, fromNodeLabel, edgeLabel, toNodeLabel) {\n    this.fromNode = fromNode;\n    this.toNode = toNode;\n    this.nodeEdgeNodeLabel = {\n      nodeLabel1: fromNodeLabel || _struct.VACANT_NODE_LABEL,\n      edgeLabel: edgeLabel || _struct.VACANT_EDGE_LABEL,\n      nodeLabel2: toNodeLabel || _struct.VACANT_NODE_LABEL\n    };\n  }\n\n  DFSedge.prototype.equalTo = function (other) {\n    return this.fromNode === other.formNode && this.toNode === other.toNode && this.nodeEdgeNodeLabel === other.nodeEdgeNodeLabel;\n  };\n\n  DFSedge.prototype.notEqualTo = function (other) {\n    return !this.equalTo(other);\n  };\n\n  return DFSedge;\n}(); // DFScode 是 DESedge 的数组\n\n\nvar DFScode =\n/** @class */\nfunction () {\n  function DFScode() {\n    this.rmpath = [];\n    this.dfsEdgeList = [];\n  }\n\n  DFScode.prototype.equalTo = function (other) {\n    var aLength = this.dfsEdgeList.length;\n    var bLength = other.length;\n    if (aLength !== bLength) return false;\n\n    for (var i = 0; i < aLength; i++) {\n      if (this.dfsEdgeList[i] !== other[i]) return false;\n    }\n\n    return true;\n  };\n\n  DFScode.prototype.notEqualTo = function (other) {\n    return !this.equalTo(other);\n  };\n  /** 增加一条 edge 到 DFScode */\n\n\n  DFScode.prototype.pushBack = function (fromNode, toNode, fromNodeLabel, edgeLabel, toNodeLabel) {\n    this.dfsEdgeList.push(new DFSedge(fromNode, toNode, fromNodeLabel, edgeLabel, toNodeLabel));\n    return this.dfsEdgeList;\n  };\n  /** 根据 dfs 构建图 */\n\n\n  DFScode.prototype.toGraph = function (graphId, directed) {\n    if (graphId === void 0) {\n      graphId = _struct.VACANT_GRAPH_ID;\n    }\n\n    if (directed === void 0) {\n      directed = false;\n    }\n\n    var graph = new _struct.Graph(graphId, true, directed);\n    this.dfsEdgeList.forEach(function (dfsEdge) {\n      var fromNodeId = dfsEdge.fromNode;\n      var toNodeId = dfsEdge.toNode;\n      var _a = dfsEdge.nodeEdgeNodeLabel,\n          nodeLabel1 = _a.nodeLabel1,\n          edgeLabel = _a.edgeLabel,\n          nodeLabel2 = _a.nodeLabel2;\n      if (nodeLabel1 !== _struct.VACANT_NODE_LABEL) graph.addNode(fromNodeId, nodeLabel1);\n      if (nodeLabel2 !== _struct.VACANT_NODE_LABEL) graph.addNode(toNodeId, nodeLabel2);\n      if (nodeLabel1 !== _struct.VACANT_NODE_LABEL && nodeLabel2 !== nodeLabel1) graph.addEdge(undefined, fromNodeId, toNodeId, edgeLabel);\n    });\n    return graph;\n  }; // 建立 rightmost path\n\n\n  DFScode.prototype.buildRmpath = function () {\n    this.rmpath = [];\n    var oldFrom = undefined;\n    var selfLength = this.dfsEdgeList.length;\n\n    for (var i = selfLength - 1; i >= 0; i--) {\n      var dfsEdge = this.dfsEdgeList[i];\n      var fromNodeIdx = dfsEdge.fromNode;\n      var toNodeIdx = dfsEdge.toNode;\n\n      if (fromNodeIdx < toNodeIdx && (oldFrom === undefined || toNodeIdx === oldFrom)) {\n        this.rmpath.push(i);\n        oldFrom = fromNodeIdx;\n      }\n    }\n\n    return this.rmpath;\n  };\n\n  DFScode.prototype.getNodeNum = function () {\n    var nodeMap = {};\n    this.dfsEdgeList.forEach(function (dfsEdge) {\n      if (!nodeMap[dfsEdge.fromNode]) nodeMap[dfsEdge.fromNode] = true;\n      if (!nodeMap[dfsEdge.toNode]) nodeMap[dfsEdge.toNode] = true;\n    });\n    return Object.keys(nodeMap).length;\n  };\n\n  return DFScode;\n}();\n\nvar History =\n/** @class */\nfunction () {\n  function History(pdfs) {\n    this.his = {};\n    this.nodesUsed = {};\n    this.edgesUsed = {};\n    this.edges = [];\n    if (!pdfs) return;\n\n    while (pdfs) {\n      var e = pdfs.edge;\n      this.edges.push(e);\n      this.nodesUsed[e.from] = 1;\n      this.nodesUsed[e.to] = 1;\n      this.edgesUsed[e.id] = 1;\n      pdfs = pdfs.preNode;\n    } // 倒序\n\n\n    this.edges = this.edges.reverse();\n  }\n\n  History.prototype.hasNode = function (node) {\n    return this.nodesUsed[node.id] === 1;\n  };\n\n  History.prototype.hasEdge = function (edge) {\n    return this.edgesUsed[edge.id] === 1;\n  };\n\n  return History;\n}();\n\nvar GSpan =\n/** @class */\nfunction () {\n  function GSpan(_a) {\n    var graphs = _a.graphs,\n        _b = _a.minSupport,\n        minSupport = _b === void 0 ? 2 : _b,\n        _c = _a.minNodeNum,\n        minNodeNum = _c === void 0 ? 1 : _c,\n        _d = _a.maxNodeNum,\n        maxNodeNum = _d === void 0 ? 4 : _d,\n        _e = _a.top,\n        top = _e === void 0 ? 10 : _e,\n        _f = _a.directed,\n        directed = _f === void 0 ? false : _f,\n        _g = _a.verbose,\n        verbose = _g === void 0 ? false : _g; // -------- 第零步，初始化-------\n\n    this.graphs = graphs;\n    this.dfsCode = new DFScode();\n    this.support = 0;\n    this.frequentSize1Subgraphs = [];\n    this.frequentSubgraphs = [];\n    this.minSupport = minSupport;\n    this.top = top;\n    this.directed = directed;\n    this.counter = 0; // TODO? timestamp = {}\n\n    this.maxNodeNum = maxNodeNum;\n    this.minNodeNum = minNodeNum;\n    this.verbose = verbose;\n    if (this.maxNodeNum < this.minNodeNum) this.maxNodeNum = this.minNodeNum;\n    this.reportDF = []; // matrix\n  } // Line 352\n\n\n  GSpan.prototype.findForwardRootEdges = function (graph, fromNode) {\n    var _this = this;\n\n    var result = [];\n    var nodeMap = graph.nodeMap;\n    fromNode.edges.forEach(function (edge) {\n      if (_this.directed || fromNode.label <= nodeMap[edge.to].label) result.push(edge);\n    });\n    return result;\n  };\n\n  GSpan.prototype.findBackwardEdge = function (graph, edge1, edge2, history) {\n    if (!this.directed && edge1 === edge2) return null;\n    var nodeMap = graph.nodeMap;\n    var edge2To = nodeMap[edge2.to];\n    var edge2ToEdges = edge2To.edges;\n    var edgeLength = edge2ToEdges.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edge2ToEdges[i];\n      if (history.hasEdge(edge) || edge.to !== edge1.from) continue;\n\n      if (!this.directed) {\n        if (edge1.label < edge.label || edge1.label === edge.label && nodeMap[edge1.to].label <= nodeMap[edge2.to].label) {\n          return edge;\n        }\n      } else {\n        if (nodeMap[edge1.from].label < nodeMap[edge2.to].label || nodeMap[edge1.from].label === nodeMap[edge2.to].label && edge1.label <= edge.label) {\n          return edge;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  GSpan.prototype.findForwardPureEdges = function (graph, rightmostEdge, minNodeLabel, history) {\n    var result = [];\n    var rightmostEdgeToId = rightmostEdge.to;\n    var edges = graph.nodeMap[rightmostEdgeToId].edges;\n    var edgeLength = edges.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      var toNode = graph.nodeMap[edge.to];\n\n      if (minNodeLabel <= toNode.label && !history.hasNode(toNode)) {\n        result.push(edge);\n      }\n    }\n\n    return result;\n  };\n\n  GSpan.prototype.findForwardRmpathEdges = function (graph, rightmostEdge, minNodeLabel, history) {\n    var result = [];\n    var nodeMap = graph.nodeMap;\n    var toNodeLabel = nodeMap[rightmostEdge.to].label;\n    var fromNode = nodeMap[rightmostEdge.from];\n    var edges = fromNode.edges;\n    var edgeLength = edges.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      var newToNodeLabel = nodeMap[edge.to].label;\n\n      if (rightmostEdge.to === edge.to || minNodeLabel > newToNodeLabel || history.hasNode(nodeMap[edge.to])) {\n        continue;\n      }\n\n      if (rightmostEdge.label < edge.label || rightmostEdge.label === edge.label && toNodeLabel <= newToNodeLabel) {\n        result.push(edge);\n      }\n    }\n\n    return result;\n  };\n\n  GSpan.prototype.getSupport = function (projected) {\n    var graphMap = {};\n    projected.forEach(function (pro) {\n      if (!graphMap[pro.graphId]) graphMap[pro.graphId] = true;\n    });\n    return Object.keys(graphMap).length;\n  };\n\n  GSpan.prototype.findMinLabel = function (obj) {\n    var minLabel = undefined;\n    Object.keys(obj).forEach(function (nodeEdgeNodeLabel) {\n      var _a = obj[nodeEdgeNodeLabel],\n          nodeLabel1 = _a.nodeLabel1,\n          edgeLabel = _a.edgeLabel,\n          nodeLabel2 = _a.nodeLabel2;\n\n      if (!minLabel) {\n        minLabel = {\n          nodeLabel1: nodeLabel1,\n          edgeLabel: edgeLabel,\n          nodeLabel2: nodeLabel2\n        };\n        return;\n      }\n\n      if (nodeLabel1 < minLabel.nodeLabel1 || nodeLabel1 === minLabel.nodeLabel1 && edgeLabel < minLabel.edgeLabel || nodeLabel1 === minLabel.nodeLabel1 && edgeLabel === minLabel.edgeLabel && nodeLabel2 < minLabel.nodeLabel2) {\n        minLabel = {\n          nodeLabel1: nodeLabel1,\n          edgeLabel: edgeLabel,\n          nodeLabel2: nodeLabel2\n        };\n      }\n    });\n    return minLabel;\n  };\n\n  GSpan.prototype.isMin = function () {\n    var _this = this;\n\n    var dfsCode = this.dfsCode;\n    if (this.verbose) console.log(\"isMin checking\", dfsCode);\n    if (dfsCode.dfsEdgeList.length === 1) return true;\n    var directed = this.directed;\n    var graph = dfsCode.toGraph(_struct.VACANT_GRAPH_ID, directed);\n    var nodeMap = graph.nodeMap;\n    var dfsCodeMin = new DFScode();\n    var root = {};\n    graph.nodes.forEach(function (node) {\n      var forwardEdges = _this.findForwardRootEdges(graph, node);\n\n      forwardEdges.forEach(function (edge) {\n        var otherNode = nodeMap[edge.to];\n        var nodeEdgeNodeLabel = \"\".concat(node.label, \"-\").concat(edge.label, \"-\").concat(otherNode.label);\n        if (!root[nodeEdgeNodeLabel]) root[nodeEdgeNodeLabel] = {\n          projected: [],\n          nodeLabel1: node.label,\n          edgeLabel: edge.label,\n          nodeLabel2: otherNode.label\n        };\n        var pdfs = {\n          graphId: graph.id,\n          edge: edge,\n          preNode: null\n        };\n        root[nodeEdgeNodeLabel].projected.push(pdfs);\n      });\n    }); // 比较 root 中每一项的 nodeEdgeNodeLabel 大小，按照 nodeLabel1、edgeLabe、nodeLabel2 的顺序比较\n\n    var minLabel = this.findMinLabel(root); // line 419\n\n    if (!minLabel) return;\n    dfsCodeMin.dfsEdgeList.push(new DFSedge(0, 1, minLabel.nodeLabel1, minLabel.edgeLabel, minLabel.nodeLabel2)); // line 423\n\n    var projectIsMin = function projectIsMin(projected) {\n      // right most path\n      var rmpath = dfsCodeMin.buildRmpath();\n      var minNodeLabel = dfsCodeMin.dfsEdgeList[0].nodeEdgeNodeLabel.nodeLabel1;\n      var maxToC = dfsCodeMin.dfsEdgeList[rmpath[0]].toNode; // node id\n\n      var backwardRoot = {};\n      var flag = false,\n          newTo = 0;\n      var end = directed ? -1 : 0; // 遍历到 1 还是到 0\n\n      var _loop_1 = function _loop_1(i) {\n        if (flag) return \"break\"; // line 435\n\n        projected.forEach(function (p) {\n          var history = new History(p);\n\n          var backwardEdge = _this.findBackwardEdge(graph, history.edges[rmpath[i]], history.edges[rmpath[0]], history);\n\n          if (backwardEdge) {\n            // Line 441\n            if (!backwardRoot[backwardEdge.label]) {\n              backwardRoot[backwardEdge.label] = {\n                projected: [],\n                edgeLabel: backwardEdge.label\n              };\n            }\n\n            backwardRoot[backwardEdge.label].projected.push({\n              graphId: graph.id,\n              edge: backwardRoot,\n              preNode: p\n            });\n            newTo = dfsCodeMin.dfsEdgeList[rmpath[i]].fromNode;\n            flag = true;\n          }\n        });\n      };\n\n      for (var i = rmpath.length - 1; i > end; i--) {\n        var state_1 = _loop_1(i);\n\n        if (state_1 === \"break\") break;\n      }\n\n      if (flag) {\n        var minBackwardEdgeLabel = _this.findMinLabel(backwardRoot);\n\n        dfsCodeMin.dfsEdgeList.push(new DFSedge(maxToC, newTo, _struct.VACANT_NODE_LABEL, minBackwardEdgeLabel.edgeLabel, _struct.VACANT_NODE_LABEL));\n        var idx_1 = dfsCodeMin.dfsEdgeList.length - 1;\n        if (_this.dfsCode.dfsEdgeList[idx_1] !== dfsCodeMin.dfsEdgeList[idx_1]) return false;\n        return projectIsMin(backwardRoot[minBackwardEdgeLabel.edgeLabel].projected);\n      }\n\n      var forwardRoot = {};\n      flag = false;\n      var newFrom = 0;\n      projected.forEach(function (p) {\n        var history = new History(p);\n\n        var forwardPureEdges = _this.findForwardPureEdges(graph, history.edges[rmpath[0]], minNodeLabel, history);\n\n        if (forwardPureEdges.length > 0) {\n          flag = true;\n          newFrom = maxToC;\n          forwardPureEdges.forEach(function (edge) {\n            var key = \"\".concat(edge.label, \"-\").concat(nodeMap[edge.to].label);\n            if (!forwardRoot[key]) forwardRoot[key] = {\n              projected: [],\n              edgeLabel: edge.label,\n              nodeLabel2: nodeMap[edge.to].label\n            };\n            forwardRoot[key].projected.push({\n              graphId: graph.id,\n              edge: edge,\n              preNode: p\n            });\n          });\n        }\n      });\n      var pathLength = rmpath.length;\n\n      var _loop_2 = function _loop_2(i) {\n        if (flag) return \"break\";\n        var value = rmpath[i];\n        projected.forEach(function (p) {\n          var history = new History(p);\n\n          var forwardRmpathEdges = _this.findForwardRmpathEdges(graph, history.edges[value], minNodeLabel, history);\n\n          if (forwardRmpathEdges.length > 0) {\n            flag = true;\n            newFrom = dfsCodeMin.dfsEdgeList[value].fromNode;\n            forwardRmpathEdges.forEach(function (edge) {\n              var key = \"\".concat(edge.label, \"-\").concat(nodeMap[edge.to].label);\n              if (!forwardRoot[key]) forwardRoot[key] = {\n                projected: [],\n                edgeLabel: edge.label,\n                nodeLabel2: nodeMap[edge.to].label\n              };\n              forwardRoot[key].projected.push({\n                graphId: graph.id,\n                edge: edge,\n                preNode: p\n              });\n            });\n          }\n        });\n      };\n\n      for (var i = 0; i < pathLength; i++) {\n        var state_2 = _loop_2(i);\n\n        if (state_2 === \"break\") break;\n      }\n\n      if (!flag) return true;\n\n      var forwardMinEdgeNodeLabel = _this.findMinLabel(forwardRoot);\n\n      dfsCodeMin.dfsEdgeList.push(new DFSedge(newFrom, maxToC + 1, _struct.VACANT_NODE_LABEL, forwardMinEdgeNodeLabel.edgeLabel, forwardMinEdgeNodeLabel.nodeLabel2));\n      var idx = dfsCodeMin.dfsEdgeList.length - 1;\n      if (dfsCode.dfsEdgeList[idx] !== dfsCodeMin.dfsEdgeList[idx]) return false;\n      return projectIsMin(forwardRoot[\"\".concat(forwardMinEdgeNodeLabel.edgeLabel, \"-\").concat(forwardMinEdgeNodeLabel.nodeLabel2)].projected);\n    };\n\n    var key = \"\".concat(minLabel.nodeLabel1, \"-\").concat(minLabel.edgeLabel, \"-\").concat(minLabel.nodeLabel2);\n    return projectIsMin(root[key].projected);\n  };\n\n  GSpan.prototype.report = function () {\n    if (this.dfsCode.getNodeNum() < this.minNodeNum) return;\n    this.counter++;\n    var graph = this.dfsCode.toGraph(this.counter, this.directed);\n    this.frequentSubgraphs.push((0, _util.clone)(graph));\n  };\n\n  GSpan.prototype.subGraphMining = function (projected) {\n    var _this = this;\n\n    var support = this.getSupport(projected);\n    if (support < this.minSupport) return;\n    if (!this.isMin()) return;\n    this.report();\n    var nodeNum = this.dfsCode.getNodeNum();\n    var rmpath = this.dfsCode.buildRmpath();\n    var maxToC = this.dfsCode.dfsEdgeList[rmpath[0]].toNode;\n    var minNodeLabel = this.dfsCode.dfsEdgeList[0].nodeEdgeNodeLabel.nodeLabel1;\n    var forwardRoot = {};\n    var backwardRoot = {};\n    projected.forEach(function (p) {\n      var graph = _this.graphs[p.graphId];\n      var nodeMap = graph.nodeMap;\n      var history = new History(p); // backward Line 526\n\n      for (var i = rmpath.length - 1; i >= 0; i--) {\n        var backwardEdge = _this.findBackwardEdge(graph, history.edges[rmpath[i]], history.edges[rmpath[0]], history);\n\n        if (backwardEdge) {\n          var key = \"\".concat(_this.dfsCode.dfsEdgeList[rmpath[i]].fromNode, \"-\").concat(backwardEdge.label);\n          if (!backwardRoot[key]) backwardRoot[key] = {\n            projected: [],\n            toNodeId: _this.dfsCode.dfsEdgeList[rmpath[i]].fromNode,\n            edgeLabel: backwardEdge.label\n          };\n          backwardRoot[key].projected.push({\n            graphId: p.graphId,\n            edge: backwardEdge,\n            preNode: p\n          });\n        }\n      } // pure forward\n\n\n      if (nodeNum >= _this.maxNodeNum) return;\n\n      var forwardPureEdges = _this.findForwardPureEdges(graph, history.edges[rmpath[0]], minNodeLabel, history);\n\n      forwardPureEdges.forEach(function (edge) {\n        var key = \"\".concat(maxToC, \"-\").concat(edge.label, \"-\").concat(nodeMap[edge.to].label);\n        if (!forwardRoot[key]) forwardRoot[key] = {\n          projected: [],\n          fromNodeId: maxToC,\n          edgeLabel: edge.label,\n          nodeLabel2: nodeMap[edge.to].label\n        };\n        forwardRoot[key].projected.push({\n          graphId: p.graphId,\n          edge: edge,\n          preNode: p\n        });\n      });\n\n      var _loop_3 = function _loop_3(i) {\n        var forwardRmpathEdges = _this.findForwardRmpathEdges(graph, history.edges[rmpath[i]], minNodeLabel, history);\n\n        forwardRmpathEdges.forEach(function (edge) {\n          var key = \"\".concat(_this.dfsCode.dfsEdgeList[rmpath[i]].fromNode, \"-\").concat(edge.label, \"-\").concat(nodeMap[edge.to].label);\n          if (!forwardRoot[key]) forwardRoot[key] = {\n            projected: [],\n            fromNodeId: _this.dfsCode.dfsEdgeList[rmpath[i]].fromNode,\n            edgeLabel: edge.label,\n            nodeLabel2: nodeMap[edge.to].label\n          };\n          forwardRoot[key].projected.push({\n            graphId: p.graphId,\n            edge: edge,\n            preNode: p\n          });\n        });\n      }; // rmpath forward\n\n\n      for (var i = 0; i < rmpath.length; i++) {\n        _loop_3(i);\n      }\n    }); // backward\n\n    Object.keys(backwardRoot).forEach(function (key) {\n      var _a = backwardRoot[key],\n          toNodeId = _a.toNodeId,\n          edgeLabel = _a.edgeLabel;\n\n      _this.dfsCode.dfsEdgeList.push(new DFSedge(maxToC, toNodeId, \"-1\", edgeLabel, \"-1\"));\n\n      _this.subGraphMining(backwardRoot[key].projected);\n\n      _this.dfsCode.dfsEdgeList.pop();\n    }); // forward\n\n    Object.keys(forwardRoot).forEach(function (key) {\n      var _a = forwardRoot[key],\n          fromNodeId = _a.fromNodeId,\n          edgeLabel = _a.edgeLabel,\n          nodeLabel2 = _a.nodeLabel2;\n\n      _this.dfsCode.dfsEdgeList.push(new DFSedge(fromNodeId, maxToC + 1, _struct.VACANT_NODE_LABEL, edgeLabel, nodeLabel2));\n\n      _this.subGraphMining(forwardRoot[key].projected);\n\n      _this.dfsCode.dfsEdgeList.pop();\n    });\n  };\n\n  GSpan.prototype.generate1EdgeFrequentSubGraphs = function () {\n    var graphs = this.graphs;\n    var directed = this.directed;\n    var minSupport = this.minSupport;\n    var frequentSize1Subgraphs = this.frequentSize1Subgraphs;\n    var nodeLabelCounter = {},\n        nodeEdgeNodeCounter = {}; // 保存各个图和各自节点的关系 map，key 格式为 graphKey-node类型\n\n    var nodeLableCounted = {}; // 保存各个图和各自边的关系 map，key 格式为 graphKey-fromNode类型-edge类型-toNode类型\n\n    var nodeEdgeNodeLabelCounted = {};\n    Object.keys(graphs).forEach(function (key) {\n      // Line 271\n      var graph = graphs[key];\n      var nodeMap = graph.nodeMap; // 遍历节点，记录对应图 与 每个节点的 label 到 nodeLableCounted\n\n      graph.nodes.forEach(function (node, i) {\n        // Line 272\n        var nodeLabel = node.label;\n        var graphNodeKey = \"\".concat(key, \"-\").concat(nodeLabel);\n\n        if (!nodeLableCounted[graphNodeKey]) {\n          var counter = nodeLabelCounter[nodeLabel] || 0;\n          counter++;\n          nodeLabelCounter[nodeLabel] = counter;\n        }\n\n        nodeLableCounted[graphNodeKey] = {\n          graphKey: key,\n          label: nodeLabel\n        }; // 遍历该节点的所有边，记录各个图和各自边的关系到 nodeEdgeNodeLabelCounted. Line 276\n\n        node.edges.forEach(function (edge) {\n          var nodeLabel1 = nodeLabel;\n          var nodeLabel2 = nodeMap[edge.to].label;\n\n          if (!directed && nodeLabel1 > nodeLabel2) {\n            var tmp = nodeLabel2;\n            nodeLabel2 = nodeLabel1;\n            nodeLabel1 = tmp;\n          }\n\n          var edgeLabel = edge.label;\n          var graphNodeEdgeNodeKey = \"\".concat(key, \"-\").concat(nodeLabel1, \"-\").concat(edgeLabel, \"-\").concat(nodeLabel2);\n          var nodeEdgeNodeKey = \"\".concat(nodeLabel1, \"-\").concat(edgeLabel, \"-\").concat(nodeLabel2);\n\n          if (!nodeEdgeNodeCounter[nodeEdgeNodeKey]) {\n            var counter = nodeEdgeNodeCounter[nodeEdgeNodeKey] || 0;\n            counter++;\n            nodeEdgeNodeCounter[nodeEdgeNodeKey] = counter; // Line281\n          }\n\n          nodeEdgeNodeLabelCounted[graphNodeEdgeNodeKey] = {\n            graphId: key,\n            nodeLabel1: nodeLabel1,\n            edgeLabel: edgeLabel,\n            nodeLabel2: nodeLabel2\n          };\n        });\n      });\n    }); // 计算频繁的节点\n\n    Object.keys(nodeLabelCounter).forEach(function (label) {\n      var count = nodeLabelCounter[label];\n      if (count < minSupport) return;\n      var g = {\n        nodes: [],\n        edges: []\n      };\n      g.nodes.push({\n        id: \"0\",\n        label: label\n      });\n      frequentSize1Subgraphs.push(g); // if (minNodeNum <= 1) reportSize1 TODO\n    });\n    return frequentSize1Subgraphs;\n  };\n\n  GSpan.prototype.run = function () {\n    var _this = this; // -------- 第一步, _generate_1edge_frequent_subgraphs：频繁的单个节点-------\n\n\n    this.frequentSize1Subgraphs = this.generate1EdgeFrequentSubGraphs();\n    if (this.maxNodeNum < 2) return;\n    var graphs = this.graphs;\n    var directed = this.directed; // PDFS 数组的 map Line 304\n\n    var root = {};\n    Object.keys(graphs).forEach(function (graphId) {\n      var graph = graphs[graphId];\n      var nodeMap = graph.nodeMap; // Line 306\n\n      graph.nodes.forEach(function (node) {\n        var forwardRootEdges = _this.findForwardRootEdges(graph, node); // Line 308\n\n\n        forwardRootEdges.forEach(function (edge) {\n          var toNode = nodeMap[edge.to];\n          var nodeEdgeNodeLabel = \"\".concat(node.label, \"-\").concat(edge.label, \"-\").concat(toNode.label);\n          if (!root[nodeEdgeNodeLabel]) root[nodeEdgeNodeLabel] = {\n            projected: [],\n            nodeLabel1: node.label,\n            edgeLabel: edge.label,\n            nodeLabel2: toNode.label\n          };\n          var pdfs = {\n            graphId: graphId,\n            edge: edge,\n            preNode: null\n          };\n          root[nodeEdgeNodeLabel].projected.push(pdfs);\n        });\n      });\n    }); // Line 313\n\n    Object.keys(root).forEach(function (nodeEdgeNodeLabel) {\n      var _a = root[nodeEdgeNodeLabel],\n          projected = _a.projected,\n          nodeLabel1 = _a.nodeLabel1,\n          edgeLabel = _a.edgeLabel,\n          nodeLabel2 = _a.nodeLabel2;\n\n      _this.dfsCode.dfsEdgeList.push(new DFSedge(0, 1, nodeLabel1, edgeLabel, nodeLabel2));\n\n      _this.subGraphMining(projected);\n\n      _this.dfsCode.dfsEdgeList.pop();\n    });\n  };\n\n  return GSpan;\n}();\n\nvar formatGraphs = function formatGraphs(graphs, directed, nodeLabelProp, edgeLabelProp) {\n  var result = {};\n  Object.keys(graphs).forEach(function (key, i) {\n    var graph = graphs[key];\n    var fGraph = new _struct.Graph(i, true, directed);\n    var nodeIdxMap = {};\n    graph.nodes.forEach(function (node, j) {\n      fGraph.addNode(j, node[nodeLabelProp]);\n      nodeIdxMap[node.id] = j;\n    });\n    graph.edges.forEach(function (edge, k) {\n      var sourceIdx = nodeIdxMap[edge.source];\n      var targetIdx = nodeIdxMap[edge.target];\n      fGraph.addEdge(-1, sourceIdx, targetIdx, edge[edgeLabelProp]);\n    });\n    if (fGraph && fGraph.getNodeNum()) result[fGraph.id] = fGraph;\n  });\n  return result;\n};\n\nvar toGraphDatas = function toGraphDatas(graphs, nodeLabelProp, edgeLabelProp) {\n  var result = [];\n  graphs.forEach(function (graph) {\n    var graphData = {\n      nodes: [],\n      edges: []\n    };\n    graph.nodes.forEach(function (node) {\n      var _a;\n\n      graphData.nodes.push((_a = {\n        id: \"\".concat(node.id)\n      }, _a[nodeLabelProp] = node.label, _a));\n    });\n    graph.edges.forEach(function (edge) {\n      var _a;\n\n      graphData.edges.push((_a = {\n        source: \"\".concat(edge.from),\n        target: \"\".concat(edge.to)\n      }, _a[edgeLabelProp] = edge.label, _a));\n    });\n    result.push(graphData);\n  });\n  return result;\n};\n\nvar DEFAULT_LABEL_NAME = \"cluster\";\n/**\n * gSpan 频繁子图计算算法（frequent graph mining）\n * @param params 参数\n */\n\nvar gSpan = function gSpan(params) {\n  // ------- 将图数据 GraphData 的 map 转换为格式 -------\n  var graphs = params.graphs,\n      _a = params.directed,\n      directed = _a === void 0 ? false : _a,\n      _b = params.nodeLabelProp,\n      nodeLabelProp = _b === void 0 ? DEFAULT_LABEL_NAME : _b,\n      _c = params.edgeLabelProp,\n      edgeLabelProp = _c === void 0 ? DEFAULT_LABEL_NAME : _c;\n  var formattedGraphs = formatGraphs(graphs, directed, nodeLabelProp, edgeLabelProp);\n  var minSupport = params.minSupport,\n      maxNodeNum = params.maxNodeNum,\n      minNodeNum = params.minNodeNum,\n      verbose = params.verbose,\n      top = params.top; // ------- 初始化与执行算法 -------\n\n  var algoParams = {\n    graphs: formattedGraphs,\n    minSupport: minSupport,\n    maxNodeNum: maxNodeNum,\n    minNodeNum: minNodeNum,\n    top: top,\n    verbose: verbose,\n    directed: directed\n  };\n  var calculator = new GSpan(algoParams);\n  calculator.run();\n  var result = toGraphDatas(calculator.frequentSubgraphs, nodeLabelProp, edgeLabelProp);\n  return result;\n};\n\nvar _default = gSpan;\nexports.default = _default;"},"lineCount":809}},"error":null,"hash":"efed126f313454662529ed520735c28e","cacheData":{"env":{}}}