{"id":"node_modules/@antv/algorithm/lib/louvain.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\package.json","includedInParent":true,"mtime":1676178924413},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\package.json","includedInParent":true,"mtime":1676178923049},{"name":"@antv/util","loc":{"line":8,"column":20,"index":127},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\louvain.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\util\\esm\\index.js"},{"name":"./adjacent-matrix","loc":{"line":10,"column":53,"index":196},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\louvain.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\adjacent-matrix.js"},{"name":"./utils/vector","loc":{"line":12,"column":45,"index":265},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\louvain.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\utils\\vector.js"},{"name":"./utils/node-properties","loc":{"line":14,"column":30,"index":316},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\louvain.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\utils\\node-properties.js"},{"name":"./utils/data-preprocessing","loc":{"line":16,"column":33,"index":378},"parent":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\louvain.js","resolved":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\algorithm\\lib\\utils\\data-preprocessing.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@antv/util\");\n\nvar _adjacentMatrix = _interopRequireDefault(require(\"./adjacent-matrix\"));\n\nvar _vector = _interopRequireDefault(require(\"./utils/vector\"));\n\nvar _nodeProperties = require(\"./utils/node-properties\");\n\nvar _dataPreprocessing = require(\"./utils/data-preprocessing\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getModularity = function getModularity(nodes, adjMatrix, ks, m) {\n  var length = adjMatrix.length;\n  var param = 2 * m;\n  var modularity = 0;\n\n  for (var i = 0; i < length; i++) {\n    var clusteri = nodes[i].clusterId;\n\n    for (var j = 0; j < length; j++) {\n      var clusterj = nodes[j].clusterId;\n      if (clusteri !== clusterj) continue;\n      var entry = adjMatrix[i][j] || 0;\n      var ki = ks[i] || 0;\n      var kj = ks[j] || 0;\n      modularity += entry - ki * kj / param;\n    }\n  }\n\n  modularity *= 1 / param;\n  return modularity;\n}; // 模块惯性度，衡量属性相似度\n\n\nvar getInertialModularity = function getInertialModularity(nodes, allPropertiesWeight) {\n  if (nodes === void 0) {\n    nodes = [];\n  }\n\n  var length = nodes.length;\n  var totalProperties = new _vector.default([]);\n\n  for (var i = 0; i < length; i++) {\n    totalProperties = totalProperties.add(new _vector.default(allPropertiesWeight[i]));\n  } // 均值向量\n\n\n  var avgProperties = totalProperties.avg(length);\n  avgProperties.normalize(); // 节点集合的方差: 节点v与均值向量的平方欧式距离之和\n\n  var variance = 0;\n\n  for (var i = 0; i < length; i++) {\n    var propertiesi = new _vector.default(allPropertiesWeight[i]);\n    var squareEuclideanDistance = propertiesi.squareEuclideanDistance(avgProperties);\n    variance += squareEuclideanDistance;\n  } // 任意两点间的欧式平方距离\n\n\n  var squareEuclideanDistanceInfo = [];\n  nodes.forEach(function () {\n    squareEuclideanDistanceInfo.push([]);\n  });\n\n  for (var i = 0; i < length; i++) {\n    var propertiesi = new _vector.default(allPropertiesWeight[i]);\n    nodes[i]['clusterInertial'] = 0;\n\n    for (var j = 0; j < length; j++) {\n      if (i === j) {\n        squareEuclideanDistanceInfo[i][j] = 0;\n        continue;\n      }\n\n      var propertiesj = new _vector.default(allPropertiesWeight[j]);\n      squareEuclideanDistanceInfo[i][j] = propertiesi.squareEuclideanDistance(propertiesj);\n      nodes[i]['clusterInertial'] += squareEuclideanDistanceInfo[i][j];\n    }\n  } // 计算模块惯性度\n\n\n  var inertialModularity = 0;\n  var param = 2 * length * variance;\n\n  for (var i = 0; i < length; i++) {\n    var clusteri = nodes[i].clusterId;\n\n    for (var j = 0; j < length; j++) {\n      var clusterj = nodes[j].clusterId;\n      if (i === j || clusteri !== clusterj) continue;\n      var inertial = nodes[i].clusterInertial * nodes[j].clusterInertial / Math.pow(param, 2) - squareEuclideanDistanceInfo[i][j] / param;\n      inertialModularity += inertial;\n    }\n  }\n\n  return Number(inertialModularity.toFixed(4));\n};\n/**\n * 社区发现 louvain 算法\n * @param graphData 图数据\n * @param directed 是否有向图，默认为 false\n * @param weightPropertyName 权重的属性字段\n * @param threshold 差值阈值\n * @param inertialModularity 是否使用惯性模块度（即节点属性相似性）\n * @param propertyKey 属性的字段名\n * @param involvedKeys 参与计算的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n * @param inertialWeight 惯性模块度权重\n */\n\n\nvar louvain = function louvain(graphData, directed, weightPropertyName, threshold, inertialModularity, propertyKey, involvedKeys, uninvolvedKeys, inertialWeight) {\n  if (directed === void 0) {\n    directed = false;\n  }\n\n  if (weightPropertyName === void 0) {\n    weightPropertyName = 'weight';\n  }\n\n  if (threshold === void 0) {\n    threshold = 0.0001;\n  }\n\n  if (inertialModularity === void 0) {\n    inertialModularity = false;\n  }\n\n  if (propertyKey === void 0) {\n    propertyKey = undefined;\n  }\n\n  if (involvedKeys === void 0) {\n    involvedKeys = [];\n  }\n\n  if (uninvolvedKeys === void 0) {\n    uninvolvedKeys = ['id'];\n  }\n\n  if (inertialWeight === void 0) {\n    inertialWeight = 1;\n  } // the origin data\n\n\n  var _a = graphData.nodes,\n      nodes = _a === void 0 ? [] : _a,\n      _b = graphData.edges,\n      edges = _b === void 0 ? [] : _b;\n  var allPropertiesWeight = [];\n\n  if (inertialModularity) {\n    nodes.forEach(function (node, index) {\n      node.properties = node.properties || {};\n      node.originIndex = index;\n    });\n    var nodeTypeInfo_1 = [];\n\n    if (nodes.every(function (node) {\n      return node.hasOwnProperty('nodeType');\n    })) {\n      nodeTypeInfo_1 = Array.from(new Set(nodes.map(function (node) {\n        return node.nodeType;\n      })));\n      nodes.forEach(function (node) {\n        node.properties.nodeType = nodeTypeInfo_1.findIndex(function (nodeType) {\n          return nodeType === node.nodeType;\n        });\n      });\n    } // 所有节点属性集合\n\n\n    var properties = (0, _nodeProperties.getAllProperties)(nodes, propertyKey); // 所有节点属性one-hot特征向量集合\n\n    allPropertiesWeight = (0, _dataPreprocessing.oneHot)(properties, involvedKeys, uninvolvedKeys);\n  }\n\n  var uniqueId = 1;\n  var clusters = {};\n  var nodeMap = {}; // init the clusters and nodeMap\n\n  nodes.forEach(function (node, i) {\n    var cid = String(uniqueId++);\n    node.clusterId = cid;\n    clusters[cid] = {\n      id: cid,\n      nodes: [node]\n    };\n    nodeMap[node.id] = {\n      node: node,\n      idx: i\n    };\n  }); // the adjacent matrix of calNodes inside clusters\n\n  var adjMatrix = (0, _adjacentMatrix.default)(graphData, directed); // the sum of each row in adjacent matrix\n\n  var ks = [];\n  /**\n   * neighbor nodes (id for key and weight for value) for each node\n   * neighbors = {\n   *  id(node_id): { id(neighbor_1_id): weight(weight of the edge), id(neighbor_2_id): weight(weight of the edge), ... },\n   *  ...\n   * }\n   */\n\n  var neighbors = {}; // the sum of the weights of all edges in the graph\n\n  var m = 0;\n  adjMatrix.forEach(function (row, i) {\n    var k = 0;\n    var iid = nodes[i].id;\n    neighbors[iid] = {};\n    row.forEach(function (entry, j) {\n      if (!entry) return;\n      k += entry;\n      var jid = nodes[j].id;\n      neighbors[iid][jid] = entry;\n      m += entry;\n    });\n    ks.push(k);\n  });\n  m /= 2;\n  var totalModularity = Infinity;\n  var previousModularity = Infinity;\n  var iter = 0;\n  var finalNodes = [];\n  var finalClusters = {};\n\n  while (true) {\n    if (inertialModularity && nodes.every(function (node) {\n      return node.hasOwnProperty('properties');\n    })) {\n      totalModularity = getModularity(nodes, adjMatrix, ks, m) + getInertialModularity(nodes, allPropertiesWeight) * inertialWeight;\n    } else {\n      totalModularity = getModularity(nodes, adjMatrix, ks, m);\n    } // 第一次迭代previousModularity直接赋值\n\n\n    if (iter === 0) {\n      previousModularity = totalModularity;\n      finalNodes = nodes;\n      finalClusters = clusters;\n    }\n\n    var increaseWithinThreshold = totalModularity > 0 && totalModularity > previousModularity && totalModularity - previousModularity < threshold; // 总模块度增加才更新最优解\n\n    if (totalModularity > previousModularity) {\n      finalNodes = nodes.map(function (node) {\n        return {\n          node: node,\n          clusterId: node.clusterId\n        };\n      });\n      finalClusters = (0, _util.clone)(clusters);\n      previousModularity = totalModularity;\n    } // whether to terminate the iterations\n\n\n    if (increaseWithinThreshold || iter > 100) {\n      break;\n    }\n\n    ;\n    iter++; // pre compute some values for current clusters\n\n    Object.keys(clusters).forEach(function (clusterId) {\n      // sum of weights of edges to nodes in cluster\n      var sumTot = 0;\n      edges.forEach(function (edge) {\n        var source = edge.source,\n            target = edge.target;\n        var sourceClusterId = nodeMap[source].node.clusterId;\n        var targetClusterId = nodeMap[target].node.clusterId;\n\n        if (sourceClusterId === clusterId && targetClusterId !== clusterId || targetClusterId === clusterId && sourceClusterId !== clusterId) {\n          sumTot = sumTot + (edge[weightPropertyName] || 1);\n        }\n      });\n      clusters[clusterId].sumTot = sumTot;\n    }); // move the nodes to increase the delta modularity\n\n    nodes.forEach(function (node, i) {\n      var selfCluster = clusters[node.clusterId];\n      var bestIncrease = 0;\n      var bestCluster;\n      var commonParam = ks[i] / (2 * m); // sum of weights of edges from node to nodes in cluster\n\n      var kiin = 0;\n      var selfClusterNodes = selfCluster.nodes;\n      selfClusterNodes.forEach(function (scNode) {\n        var scNodeIdx = nodeMap[scNode.id].idx;\n        kiin += adjMatrix[i][scNodeIdx] || 0;\n      }); // the modurarity for **removing** the node i from the origin cluster of node i\n\n      var removeModurarity = kiin - selfCluster.sumTot * commonParam; // nodes for **removing** node i into this neighbor cluster\n\n      var selfClusterNodesAfterRemove = selfClusterNodes.filter(function (scNode) {\n        return scNode.id !== node.id;\n      });\n      var propertiesWeightRemove = [];\n      selfClusterNodesAfterRemove.forEach(function (nodeRemove, index) {\n        propertiesWeightRemove[index] = allPropertiesWeight[nodeRemove.originIndex];\n      }); // the inertialModularity for **removing** the node i from the origin cluster of node i\n\n      var removeInertialModularity = getInertialModularity(selfClusterNodesAfterRemove, allPropertiesWeight) * inertialWeight; // the neightbors of the node\n\n      var nodeNeighborIds = neighbors[node.id];\n      Object.keys(nodeNeighborIds).forEach(function (neighborNodeId) {\n        var neighborNode = nodeMap[neighborNodeId].node;\n        var neighborClusterId = neighborNode.clusterId; // if the node and the neighbor of node are in the same cluster, reutrn\n\n        if (neighborClusterId === node.clusterId) return;\n        var neighborCluster = clusters[neighborClusterId];\n        var clusterNodes = neighborCluster.nodes; // if the cluster is empty, remove the cluster and return\n\n        if (!clusterNodes || !clusterNodes.length) return; // sum of weights of edges from node to nodes in cluster\n\n        var neighborClusterKiin = 0;\n        clusterNodes.forEach(function (cNode) {\n          var cNodeIdx = nodeMap[cNode.id].idx;\n          neighborClusterKiin += adjMatrix[i][cNodeIdx] || 0;\n        }); // the modurarity for **adding** node i into this neighbor cluster\n\n        var addModurarity = neighborClusterKiin - neighborCluster.sumTot * commonParam; // nodes for **adding** node i into this neighbor cluster\n\n        var clusterNodesAfterAdd = clusterNodes.concat([node]);\n        var propertiesWeightAdd = [];\n        clusterNodesAfterAdd.forEach(function (nodeAdd, index) {\n          propertiesWeightAdd[index] = allPropertiesWeight[nodeAdd.originIndex];\n        }); // the inertialModularity for **adding** node i into this neighbor cluster\n\n        var addInertialModularity = getInertialModularity(clusterNodesAfterAdd, allPropertiesWeight) * inertialWeight; // the increase modurarity is the difference between addModurarity and removeModurarity\n\n        var increase = addModurarity - removeModurarity;\n\n        if (inertialModularity) {\n          increase = addModurarity + addInertialModularity - (removeModurarity + removeInertialModularity);\n        } // find the best cluster to move node i into\n\n\n        if (increase > bestIncrease) {\n          bestIncrease = increase;\n          bestCluster = neighborCluster;\n        }\n      }); // if found a best cluster to move into\n\n      if (bestIncrease > 0) {\n        bestCluster.nodes.push(node);\n        var previousClusterId_1 = node.clusterId;\n        node.clusterId = bestCluster.id; // move the node to the best cluster\n\n        var nodeInSelfClusterIdx = selfCluster.nodes.indexOf(node); // remove from origin cluster\n\n        selfCluster.nodes.splice(nodeInSelfClusterIdx, 1); // update sumTot for clusters\n        // sum of weights of edges to nodes in cluster\n\n        var neighborClusterSumTot_1 = 0;\n        var selfClusterSumTot_1 = 0;\n        edges.forEach(function (edge) {\n          var source = edge.source,\n              target = edge.target;\n          var sourceClusterId = nodeMap[source].node.clusterId;\n          var targetClusterId = nodeMap[target].node.clusterId;\n\n          if (sourceClusterId === bestCluster.id && targetClusterId !== bestCluster.id || targetClusterId === bestCluster.id && sourceClusterId !== bestCluster.id) {\n            neighborClusterSumTot_1 = neighborClusterSumTot_1 + (edge[weightPropertyName] || 1);\n          }\n\n          if (sourceClusterId === previousClusterId_1 && targetClusterId !== previousClusterId_1 || targetClusterId === previousClusterId_1 && sourceClusterId !== previousClusterId_1) {\n            selfClusterSumTot_1 = selfClusterSumTot_1 + (edge[weightPropertyName] || 1);\n          }\n        }); // the nodes of the clusters to move into and remove are changed, update their sumTot\n\n        bestCluster.sumTot = neighborClusterSumTot_1;\n        selfCluster.sumTot = selfClusterSumTot_1;\n      }\n    });\n  } // delete the empty clusters, assign increasing clusterId\n\n\n  var newClusterIdMap = {};\n  var clusterIdx = 0;\n  Object.keys(finalClusters).forEach(function (clusterId) {\n    var cluster = finalClusters[clusterId];\n\n    if (!cluster.nodes || !cluster.nodes.length) {\n      delete finalClusters[clusterId];\n      return;\n    }\n\n    var newId = String(clusterIdx + 1);\n\n    if (newId === clusterId) {\n      return;\n    }\n\n    cluster.id = newId;\n    cluster.nodes = cluster.nodes.map(function (item) {\n      return {\n        id: item.id,\n        clusterId: newId\n      };\n    });\n    finalClusters[newId] = cluster;\n    newClusterIdMap[clusterId] = newId;\n    delete finalClusters[clusterId];\n    clusterIdx++;\n  }); // restore node clusterId\n\n  finalNodes.forEach(function (nodeInfo) {\n    var node = nodeInfo.node,\n        clusterId = nodeInfo.clusterId;\n    if (!node) return;\n    node.clusterId = clusterId;\n    if (node.clusterId && newClusterIdMap[node.clusterId]) node.clusterId = newClusterIdMap[node.clusterId];\n  }); // get the cluster edges\n\n  var clusterEdges = [];\n  var clusterEdgeMap = {};\n  edges.forEach(function (edge) {\n    var source = edge.source,\n        target = edge.target;\n    var weight = edge[weightPropertyName] || 1;\n    var sourceClusterId = nodeMap[source].node.clusterId;\n    var targetClusterId = nodeMap[target].node.clusterId;\n    if (!sourceClusterId || !targetClusterId) return;\n    var newEdgeId = \"\".concat(sourceClusterId, \"---\").concat(targetClusterId);\n\n    if (clusterEdgeMap[newEdgeId]) {\n      clusterEdgeMap[newEdgeId].weight += weight;\n      clusterEdgeMap[newEdgeId].count++;\n    } else {\n      var newEdge = {\n        source: sourceClusterId,\n        target: targetClusterId,\n        weight: weight,\n        count: 1\n      };\n      clusterEdgeMap[newEdgeId] = newEdge;\n      clusterEdges.push(newEdge);\n    }\n  });\n  var clustersArray = [];\n  Object.keys(finalClusters).forEach(function (clusterId) {\n    clustersArray.push(finalClusters[clusterId]);\n  });\n  return {\n    clusters: clustersArray,\n    clusterEdges: clusterEdges\n  };\n};\n\nvar _default = louvain;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@antv/algorithm/lib/louvain.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}}],"sources":{"node_modules/@antv/algorithm/lib/louvain.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@antv/util\");\n\nvar _adjacentMatrix = _interopRequireDefault(require(\"./adjacent-matrix\"));\n\nvar _vector = _interopRequireDefault(require(\"./utils/vector\"));\n\nvar _nodeProperties = require(\"./utils/node-properties\");\n\nvar _dataPreprocessing = require(\"./utils/data-preprocessing\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getModularity = function getModularity(nodes, adjMatrix, ks, m) {\n  var length = adjMatrix.length;\n  var param = 2 * m;\n  var modularity = 0;\n\n  for (var i = 0; i < length; i++) {\n    var clusteri = nodes[i].clusterId;\n\n    for (var j = 0; j < length; j++) {\n      var clusterj = nodes[j].clusterId;\n      if (clusteri !== clusterj) continue;\n      var entry = adjMatrix[i][j] || 0;\n      var ki = ks[i] || 0;\n      var kj = ks[j] || 0;\n      modularity += entry - ki * kj / param;\n    }\n  }\n\n  modularity *= 1 / param;\n  return modularity;\n}; // 模块惯性度，衡量属性相似度\n\n\nvar getInertialModularity = function getInertialModularity(nodes, allPropertiesWeight) {\n  if (nodes === void 0) {\n    nodes = [];\n  }\n\n  var length = nodes.length;\n  var totalProperties = new _vector.default([]);\n\n  for (var i = 0; i < length; i++) {\n    totalProperties = totalProperties.add(new _vector.default(allPropertiesWeight[i]));\n  } // 均值向量\n\n\n  var avgProperties = totalProperties.avg(length);\n  avgProperties.normalize(); // 节点集合的方差: 节点v与均值向量的平方欧式距离之和\n\n  var variance = 0;\n\n  for (var i = 0; i < length; i++) {\n    var propertiesi = new _vector.default(allPropertiesWeight[i]);\n    var squareEuclideanDistance = propertiesi.squareEuclideanDistance(avgProperties);\n    variance += squareEuclideanDistance;\n  } // 任意两点间的欧式平方距离\n\n\n  var squareEuclideanDistanceInfo = [];\n  nodes.forEach(function () {\n    squareEuclideanDistanceInfo.push([]);\n  });\n\n  for (var i = 0; i < length; i++) {\n    var propertiesi = new _vector.default(allPropertiesWeight[i]);\n    nodes[i]['clusterInertial'] = 0;\n\n    for (var j = 0; j < length; j++) {\n      if (i === j) {\n        squareEuclideanDistanceInfo[i][j] = 0;\n        continue;\n      }\n\n      var propertiesj = new _vector.default(allPropertiesWeight[j]);\n      squareEuclideanDistanceInfo[i][j] = propertiesi.squareEuclideanDistance(propertiesj);\n      nodes[i]['clusterInertial'] += squareEuclideanDistanceInfo[i][j];\n    }\n  } // 计算模块惯性度\n\n\n  var inertialModularity = 0;\n  var param = 2 * length * variance;\n\n  for (var i = 0; i < length; i++) {\n    var clusteri = nodes[i].clusterId;\n\n    for (var j = 0; j < length; j++) {\n      var clusterj = nodes[j].clusterId;\n      if (i === j || clusteri !== clusterj) continue;\n      var inertial = nodes[i].clusterInertial * nodes[j].clusterInertial / Math.pow(param, 2) - squareEuclideanDistanceInfo[i][j] / param;\n      inertialModularity += inertial;\n    }\n  }\n\n  return Number(inertialModularity.toFixed(4));\n};\n/**\n * 社区发现 louvain 算法\n * @param graphData 图数据\n * @param directed 是否有向图，默认为 false\n * @param weightPropertyName 权重的属性字段\n * @param threshold 差值阈值\n * @param inertialModularity 是否使用惯性模块度（即节点属性相似性）\n * @param propertyKey 属性的字段名\n * @param involvedKeys 参与计算的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n * @param inertialWeight 惯性模块度权重\n */\n\n\nvar louvain = function louvain(graphData, directed, weightPropertyName, threshold, inertialModularity, propertyKey, involvedKeys, uninvolvedKeys, inertialWeight) {\n  if (directed === void 0) {\n    directed = false;\n  }\n\n  if (weightPropertyName === void 0) {\n    weightPropertyName = 'weight';\n  }\n\n  if (threshold === void 0) {\n    threshold = 0.0001;\n  }\n\n  if (inertialModularity === void 0) {\n    inertialModularity = false;\n  }\n\n  if (propertyKey === void 0) {\n    propertyKey = undefined;\n  }\n\n  if (involvedKeys === void 0) {\n    involvedKeys = [];\n  }\n\n  if (uninvolvedKeys === void 0) {\n    uninvolvedKeys = ['id'];\n  }\n\n  if (inertialWeight === void 0) {\n    inertialWeight = 1;\n  } // the origin data\n\n\n  var _a = graphData.nodes,\n      nodes = _a === void 0 ? [] : _a,\n      _b = graphData.edges,\n      edges = _b === void 0 ? [] : _b;\n  var allPropertiesWeight = [];\n\n  if (inertialModularity) {\n    nodes.forEach(function (node, index) {\n      node.properties = node.properties || {};\n      node.originIndex = index;\n    });\n    var nodeTypeInfo_1 = [];\n\n    if (nodes.every(function (node) {\n      return node.hasOwnProperty('nodeType');\n    })) {\n      nodeTypeInfo_1 = Array.from(new Set(nodes.map(function (node) {\n        return node.nodeType;\n      })));\n      nodes.forEach(function (node) {\n        node.properties.nodeType = nodeTypeInfo_1.findIndex(function (nodeType) {\n          return nodeType === node.nodeType;\n        });\n      });\n    } // 所有节点属性集合\n\n\n    var properties = (0, _nodeProperties.getAllProperties)(nodes, propertyKey); // 所有节点属性one-hot特征向量集合\n\n    allPropertiesWeight = (0, _dataPreprocessing.oneHot)(properties, involvedKeys, uninvolvedKeys);\n  }\n\n  var uniqueId = 1;\n  var clusters = {};\n  var nodeMap = {}; // init the clusters and nodeMap\n\n  nodes.forEach(function (node, i) {\n    var cid = String(uniqueId++);\n    node.clusterId = cid;\n    clusters[cid] = {\n      id: cid,\n      nodes: [node]\n    };\n    nodeMap[node.id] = {\n      node: node,\n      idx: i\n    };\n  }); // the adjacent matrix of calNodes inside clusters\n\n  var adjMatrix = (0, _adjacentMatrix.default)(graphData, directed); // the sum of each row in adjacent matrix\n\n  var ks = [];\n  /**\n   * neighbor nodes (id for key and weight for value) for each node\n   * neighbors = {\n   *  id(node_id): { id(neighbor_1_id): weight(weight of the edge), id(neighbor_2_id): weight(weight of the edge), ... },\n   *  ...\n   * }\n   */\n\n  var neighbors = {}; // the sum of the weights of all edges in the graph\n\n  var m = 0;\n  adjMatrix.forEach(function (row, i) {\n    var k = 0;\n    var iid = nodes[i].id;\n    neighbors[iid] = {};\n    row.forEach(function (entry, j) {\n      if (!entry) return;\n      k += entry;\n      var jid = nodes[j].id;\n      neighbors[iid][jid] = entry;\n      m += entry;\n    });\n    ks.push(k);\n  });\n  m /= 2;\n  var totalModularity = Infinity;\n  var previousModularity = Infinity;\n  var iter = 0;\n  var finalNodes = [];\n  var finalClusters = {};\n\n  while (true) {\n    if (inertialModularity && nodes.every(function (node) {\n      return node.hasOwnProperty('properties');\n    })) {\n      totalModularity = getModularity(nodes, adjMatrix, ks, m) + getInertialModularity(nodes, allPropertiesWeight) * inertialWeight;\n    } else {\n      totalModularity = getModularity(nodes, adjMatrix, ks, m);\n    } // 第一次迭代previousModularity直接赋值\n\n\n    if (iter === 0) {\n      previousModularity = totalModularity;\n      finalNodes = nodes;\n      finalClusters = clusters;\n    }\n\n    var increaseWithinThreshold = totalModularity > 0 && totalModularity > previousModularity && totalModularity - previousModularity < threshold; // 总模块度增加才更新最优解\n\n    if (totalModularity > previousModularity) {\n      finalNodes = nodes.map(function (node) {\n        return {\n          node: node,\n          clusterId: node.clusterId\n        };\n      });\n      finalClusters = (0, _util.clone)(clusters);\n      previousModularity = totalModularity;\n    } // whether to terminate the iterations\n\n\n    if (increaseWithinThreshold || iter > 100) {\n      break;\n    }\n\n    ;\n    iter++; // pre compute some values for current clusters\n\n    Object.keys(clusters).forEach(function (clusterId) {\n      // sum of weights of edges to nodes in cluster\n      var sumTot = 0;\n      edges.forEach(function (edge) {\n        var source = edge.source,\n            target = edge.target;\n        var sourceClusterId = nodeMap[source].node.clusterId;\n        var targetClusterId = nodeMap[target].node.clusterId;\n\n        if (sourceClusterId === clusterId && targetClusterId !== clusterId || targetClusterId === clusterId && sourceClusterId !== clusterId) {\n          sumTot = sumTot + (edge[weightPropertyName] || 1);\n        }\n      });\n      clusters[clusterId].sumTot = sumTot;\n    }); // move the nodes to increase the delta modularity\n\n    nodes.forEach(function (node, i) {\n      var selfCluster = clusters[node.clusterId];\n      var bestIncrease = 0;\n      var bestCluster;\n      var commonParam = ks[i] / (2 * m); // sum of weights of edges from node to nodes in cluster\n\n      var kiin = 0;\n      var selfClusterNodes = selfCluster.nodes;\n      selfClusterNodes.forEach(function (scNode) {\n        var scNodeIdx = nodeMap[scNode.id].idx;\n        kiin += adjMatrix[i][scNodeIdx] || 0;\n      }); // the modurarity for **removing** the node i from the origin cluster of node i\n\n      var removeModurarity = kiin - selfCluster.sumTot * commonParam; // nodes for **removing** node i into this neighbor cluster\n\n      var selfClusterNodesAfterRemove = selfClusterNodes.filter(function (scNode) {\n        return scNode.id !== node.id;\n      });\n      var propertiesWeightRemove = [];\n      selfClusterNodesAfterRemove.forEach(function (nodeRemove, index) {\n        propertiesWeightRemove[index] = allPropertiesWeight[nodeRemove.originIndex];\n      }); // the inertialModularity for **removing** the node i from the origin cluster of node i\n\n      var removeInertialModularity = getInertialModularity(selfClusterNodesAfterRemove, allPropertiesWeight) * inertialWeight; // the neightbors of the node\n\n      var nodeNeighborIds = neighbors[node.id];\n      Object.keys(nodeNeighborIds).forEach(function (neighborNodeId) {\n        var neighborNode = nodeMap[neighborNodeId].node;\n        var neighborClusterId = neighborNode.clusterId; // if the node and the neighbor of node are in the same cluster, reutrn\n\n        if (neighborClusterId === node.clusterId) return;\n        var neighborCluster = clusters[neighborClusterId];\n        var clusterNodes = neighborCluster.nodes; // if the cluster is empty, remove the cluster and return\n\n        if (!clusterNodes || !clusterNodes.length) return; // sum of weights of edges from node to nodes in cluster\n\n        var neighborClusterKiin = 0;\n        clusterNodes.forEach(function (cNode) {\n          var cNodeIdx = nodeMap[cNode.id].idx;\n          neighborClusterKiin += adjMatrix[i][cNodeIdx] || 0;\n        }); // the modurarity for **adding** node i into this neighbor cluster\n\n        var addModurarity = neighborClusterKiin - neighborCluster.sumTot * commonParam; // nodes for **adding** node i into this neighbor cluster\n\n        var clusterNodesAfterAdd = clusterNodes.concat([node]);\n        var propertiesWeightAdd = [];\n        clusterNodesAfterAdd.forEach(function (nodeAdd, index) {\n          propertiesWeightAdd[index] = allPropertiesWeight[nodeAdd.originIndex];\n        }); // the inertialModularity for **adding** node i into this neighbor cluster\n\n        var addInertialModularity = getInertialModularity(clusterNodesAfterAdd, allPropertiesWeight) * inertialWeight; // the increase modurarity is the difference between addModurarity and removeModurarity\n\n        var increase = addModurarity - removeModurarity;\n\n        if (inertialModularity) {\n          increase = addModurarity + addInertialModularity - (removeModurarity + removeInertialModularity);\n        } // find the best cluster to move node i into\n\n\n        if (increase > bestIncrease) {\n          bestIncrease = increase;\n          bestCluster = neighborCluster;\n        }\n      }); // if found a best cluster to move into\n\n      if (bestIncrease > 0) {\n        bestCluster.nodes.push(node);\n        var previousClusterId_1 = node.clusterId;\n        node.clusterId = bestCluster.id; // move the node to the best cluster\n\n        var nodeInSelfClusterIdx = selfCluster.nodes.indexOf(node); // remove from origin cluster\n\n        selfCluster.nodes.splice(nodeInSelfClusterIdx, 1); // update sumTot for clusters\n        // sum of weights of edges to nodes in cluster\n\n        var neighborClusterSumTot_1 = 0;\n        var selfClusterSumTot_1 = 0;\n        edges.forEach(function (edge) {\n          var source = edge.source,\n              target = edge.target;\n          var sourceClusterId = nodeMap[source].node.clusterId;\n          var targetClusterId = nodeMap[target].node.clusterId;\n\n          if (sourceClusterId === bestCluster.id && targetClusterId !== bestCluster.id || targetClusterId === bestCluster.id && sourceClusterId !== bestCluster.id) {\n            neighborClusterSumTot_1 = neighborClusterSumTot_1 + (edge[weightPropertyName] || 1);\n          }\n\n          if (sourceClusterId === previousClusterId_1 && targetClusterId !== previousClusterId_1 || targetClusterId === previousClusterId_1 && sourceClusterId !== previousClusterId_1) {\n            selfClusterSumTot_1 = selfClusterSumTot_1 + (edge[weightPropertyName] || 1);\n          }\n        }); // the nodes of the clusters to move into and remove are changed, update their sumTot\n\n        bestCluster.sumTot = neighborClusterSumTot_1;\n        selfCluster.sumTot = selfClusterSumTot_1;\n      }\n    });\n  } // delete the empty clusters, assign increasing clusterId\n\n\n  var newClusterIdMap = {};\n  var clusterIdx = 0;\n  Object.keys(finalClusters).forEach(function (clusterId) {\n    var cluster = finalClusters[clusterId];\n\n    if (!cluster.nodes || !cluster.nodes.length) {\n      delete finalClusters[clusterId];\n      return;\n    }\n\n    var newId = String(clusterIdx + 1);\n\n    if (newId === clusterId) {\n      return;\n    }\n\n    cluster.id = newId;\n    cluster.nodes = cluster.nodes.map(function (item) {\n      return {\n        id: item.id,\n        clusterId: newId\n      };\n    });\n    finalClusters[newId] = cluster;\n    newClusterIdMap[clusterId] = newId;\n    delete finalClusters[clusterId];\n    clusterIdx++;\n  }); // restore node clusterId\n\n  finalNodes.forEach(function (nodeInfo) {\n    var node = nodeInfo.node,\n        clusterId = nodeInfo.clusterId;\n    if (!node) return;\n    node.clusterId = clusterId;\n    if (node.clusterId && newClusterIdMap[node.clusterId]) node.clusterId = newClusterIdMap[node.clusterId];\n  }); // get the cluster edges\n\n  var clusterEdges = [];\n  var clusterEdgeMap = {};\n  edges.forEach(function (edge) {\n    var source = edge.source,\n        target = edge.target;\n    var weight = edge[weightPropertyName] || 1;\n    var sourceClusterId = nodeMap[source].node.clusterId;\n    var targetClusterId = nodeMap[target].node.clusterId;\n    if (!sourceClusterId || !targetClusterId) return;\n    var newEdgeId = \"\".concat(sourceClusterId, \"---\").concat(targetClusterId);\n\n    if (clusterEdgeMap[newEdgeId]) {\n      clusterEdgeMap[newEdgeId].weight += weight;\n      clusterEdgeMap[newEdgeId].count++;\n    } else {\n      var newEdge = {\n        source: sourceClusterId,\n        target: targetClusterId,\n        weight: weight,\n        count: 1\n      };\n      clusterEdgeMap[newEdgeId] = newEdge;\n      clusterEdges.push(newEdge);\n    }\n  });\n  var clustersArray = [];\n  Object.keys(finalClusters).forEach(function (clusterId) {\n    clustersArray.push(finalClusters[clusterId]);\n  });\n  return {\n    clusters: clustersArray,\n    clusterEdges: clusterEdges\n  };\n};\n\nvar _default = louvain;\nexports.default = _default;"},"lineCount":462}},"error":null,"hash":"73e869ed02d955072df0e6bb04c4f9cc","cacheData":{"env":{}}}