{"id":"node_modules/@antv/layout/lib/layout/layout.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\src\\layout\\layout.ts","includedInParent":true,"mtime":499162500000},{"name":"D:\\myData\\前端\\doing\\AutoPL\\package.json","includedInParent":true,"mtime":1674182060254},{"name":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\package.json","includedInParent":true,"mtime":1674179681168},{"name":"../registy","loc":{"line":4,"column":24,"index":144},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\registy\\index.js"},{"name":"./grid","loc":{"line":5,"column":21,"index":180},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\grid.js"},{"name":"./random","loc":{"line":6,"column":23,"index":214},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\random.js"},{"name":"./force2","loc":{"line":7,"column":23,"index":250},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\force2\\index.js"},{"name":"./gForce","loc":{"line":8,"column":23,"index":286},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\gForce.js"},{"name":"./force","loc":{"line":9,"column":22,"index":321},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\force\\index.js"},{"name":"./circular","loc":{"line":10,"column":25,"index":358},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\circular.js"},{"name":"./dagre","loc":{"line":11,"column":22,"index":395},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\dagre.js"},{"name":"./radial","loc":{"line":12,"column":23,"index":430},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\radial\\index.js"},{"name":"./concentric","loc":{"line":13,"column":27,"index":470},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\concentric.js"},{"name":"./mds","loc":{"line":14,"column":20,"index":507},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\mds.js"},{"name":"./fruchterman","loc":{"line":15,"column":28,"index":545},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\fruchterman.js"},{"name":"./gpu/fruchterman","loc":{"line":16,"column":28,"index":591},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\gpu\\fruchterman.js"},{"name":"./gpu/gForce","loc":{"line":17,"column":23,"index":636},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\gpu\\gForce.js"},{"name":"./comboForce","loc":{"line":18,"column":27,"index":680},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\comboForce.js"},{"name":"./comboCombined","loc":{"line":19,"column":30,"index":727},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\comboCombined.js"},{"name":"./forceAtlas2","loc":{"line":20,"column":28,"index":775},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\forceAtlas2\\index.js"},{"name":"./er","loc":{"line":21,"column":19,"index":812},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\er\\index.js"},{"name":"./dagreCompound","loc":{"line":22,"column":30,"index":851},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\dagreCompound.js"},{"name":"../util","loc":{"line":23,"column":21,"index":892},"parent":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\layout\\layout.js","resolved":"D:\\myData\\前端\\doing\\AutoPL\\node_modules\\@antv\\layout\\lib\\util\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Layouts = exports.Layout = void 0;\nvar registy_1 = require(\"../registy\");\nvar grid_1 = require(\"./grid\");\nvar random_1 = require(\"./random\");\nvar force2_1 = require(\"./force2\");\nvar gForce_1 = require(\"./gForce\");\nvar force_1 = require(\"./force\");\nvar circular_1 = require(\"./circular\");\nvar dagre_1 = require(\"./dagre\");\nvar radial_1 = require(\"./radial\");\nvar concentric_1 = require(\"./concentric\");\nvar mds_1 = require(\"./mds\");\nvar fruchterman_1 = require(\"./fruchterman\");\nvar fruchterman_2 = require(\"./gpu/fruchterman\");\nvar gForce_2 = require(\"./gpu/gForce\");\nvar comboForce_1 = require(\"./comboForce\");\nvar comboCombined_1 = require(\"./comboCombined\");\nvar forceAtlas2_1 = require(\"./forceAtlas2\");\nvar er_1 = require(\"./er\");\nvar dagreCompound_1 = require(\"./dagreCompound\");\nvar util_1 = require(\"../util\");\nvar Layout = /** @class */ (function () {\n    function Layout(options) {\n        var layoutClass = (0, registy_1.getLayoutByName)(options.type);\n        this.layoutInstance = new layoutClass(options);\n    }\n    Layout.prototype.layout = function (data) {\n        return this.layoutInstance.layout(data);\n    };\n    Layout.prototype.updateCfg = function (cfg) {\n        this.layoutInstance.updateCfg(cfg);\n    };\n    Layout.prototype.init = function (data) {\n        this.correctLayers(data.nodes);\n        this.layoutInstance.init(data);\n    };\n    /**\n     * correcting the layers on the node data\n     * if min(layer) <= 0, layers should begin from abs(min(layer)) + 1\n     * @param nodes\n     * @returns\n     */\n    Layout.prototype.correctLayers = function (nodes) {\n        if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length))\n            return;\n        var minLayer = Infinity;\n        var hasLayerNodes = [];\n        nodes.forEach(function (node) {\n            if ((0, util_1.isString)(node.layer)) {\n                node.layer = parseInt(node.layer, 10);\n            }\n            // keep node.layer === undefined for TS problem\n            if (node.layer === undefined || isNaN(node.layer))\n                return;\n            hasLayerNodes.push(node);\n            if (node.layer < minLayer)\n                minLayer = node.layer;\n        });\n        if (minLayer <= 0) {\n            var layerOffset_1 = Math.abs(minLayer) + 1;\n            // @ts-ignore\n            hasLayerNodes.forEach(function (node) { return node.layer += layerOffset_1; });\n        }\n    };\n    Layout.prototype.execute = function () {\n        this.layoutInstance.execute();\n    };\n    Layout.prototype.getDefaultCfg = function () {\n        return this.layoutInstance.getDefaultCfg();\n    };\n    Layout.prototype.destroy = function () {\n        return this.layoutInstance.destroy();\n    };\n    return Layout;\n}());\nexports.Layout = Layout;\n// FIXME\n// FOR G6\n// tslint:disable-next-line\nexports.Layouts = {\n    force: force_1.ForceLayout,\n    fruchterman: fruchterman_1.FruchtermanLayout,\n    forceAtlas2: forceAtlas2_1.ForceAtlas2Layout,\n    gForce: gForce_1.GForceLayout,\n    force2: force2_1.Force2Layout,\n    dagre: dagre_1.DagreLayout,\n    dagreCompound: dagreCompound_1.DagreCompoundLayout,\n    circular: circular_1.CircularLayout,\n    radial: radial_1.RadialLayout,\n    concentric: concentric_1.ConcentricLayout,\n    grid: grid_1.GridLayout,\n    mds: mds_1.MDSLayout,\n    comboForce: comboForce_1.ComboForceLayout,\n    comboCombined: comboCombined_1.ComboCombinedLayout,\n    random: random_1.RandomLayout,\n    'gForce-gpu': gForce_2.GForceGPULayout,\n    'fruchterman-gpu': fruchterman_2.FruchtermanGPULayout,\n    er: er_1.ERLayout,\n};\n"},"sourceMaps":{"js":{"version":3,"file":"layout.js","sourceRoot":"","sources":["../../src/layout/layout.ts"],"names":[],"mappings":"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","sourcesContent":["import { Base } from \"./base\";\nimport { Model, ILayout, Node } from \"./types\";\nimport { getLayoutByName } from \"../registy\";\nimport { GridLayout } from \"./grid\";\nimport { RandomLayout } from \"./random\";\nimport { Force2Layout } from \"./force2\";\nimport { GForceLayout } from \"./gForce\";\nimport { ForceLayout } from \"./force\";\nimport { CircularLayout } from \"./circular\";\nimport { DagreLayout } from \"./dagre\";\nimport { RadialLayout } from \"./radial\";\nimport { ConcentricLayout } from \"./concentric\";\nimport { MDSLayout } from \"./mds\";\nimport { FruchtermanLayout } from \"./fruchterman\";\nimport { FruchtermanGPULayout } from \"./gpu/fruchterman\";\nimport { GForceGPULayout } from \"./gpu/gForce\";\nimport { ComboForceLayout } from \"./comboForce\";\nimport { ComboCombinedLayout } from \"./comboCombined\";\nimport { ForceAtlas2Layout } from \"./forceAtlas2\";\nimport { ERLayout } from \"./er\";\nimport { DagreCompoundLayout } from \"./dagreCompound\";\nimport { isString } from \"../util\";\n\ninterface DagreNodeData extends Node {\n  layer?: number;\n}\n\nexport class Layout {\n  public readonly layoutInstance: Base;\n\n  constructor(options: ILayout.LayoutOptions) {\n    const layoutClass = getLayoutByName(options.type as string);\n    this.layoutInstance = new layoutClass(options);\n  }\n\n  layout(data: Model) {\n    return this.layoutInstance.layout(data);\n  }\n\n  updateCfg(cfg: ILayout.LayoutOptions) {\n    this.layoutInstance.updateCfg(cfg);\n  }\n\n  init(data: Model) {\n    this.correctLayers(data.nodes);\n    this.layoutInstance.init(data);\n  }\n\n  /**\n   * correcting the layers on the node data\n   * if min(layer) <= 0, layers should begin from abs(min(layer)) + 1\n   * @param nodes \n   * @returns \n   */\n   correctLayers(nodes: DagreNodeData[] | undefined) {\n    if (!nodes?.length) return;\n    let minLayer = Infinity;\n    const hasLayerNodes: DagreNodeData[] = [];\n    nodes.forEach((node) => {\n      if (isString(node.layer)) {\n        node.layer = parseInt(node.layer, 10);\n      }\n      // keep node.layer === undefined for TS problem\n      if (node.layer === undefined || isNaN(node.layer)) return;\n      hasLayerNodes.push(node);\n      if (node.layer < minLayer) minLayer = node.layer;\n    });\n    if (minLayer <= 0) {\n      const layerOffset = Math.abs(minLayer) + 1;\n      // @ts-ignore\n      hasLayerNodes.forEach((node) => node.layer += layerOffset);\n    }\n  }\n\n  execute() {\n    this.layoutInstance.execute();\n  }\n\n  getDefaultCfg() {\n    return this.layoutInstance.getDefaultCfg();\n  }\n\n  destroy() {\n    return this.layoutInstance.destroy();\n  }\n}\n\n// FIXME\n// FOR G6\n// tslint:disable-next-line\nexport const Layouts: { [key: string]: any } = {\n  force: ForceLayout,\n  fruchterman: FruchtermanLayout,\n  forceAtlas2: ForceAtlas2Layout,\n  gForce: GForceLayout,\n  force2: Force2Layout,\n  dagre: DagreLayout,\n  dagreCompound: DagreCompoundLayout,\n  circular: CircularLayout,\n  radial: RadialLayout,\n  concentric: ConcentricLayout,\n  grid: GridLayout,\n  mds: MDSLayout,\n  comboForce: ComboForceLayout,\n  comboCombined: ComboCombinedLayout,\n  random: RandomLayout,\n  'gForce-gpu': GForceGPULayout,\n  'fruchterman-gpu': FruchtermanGPULayout,\n  er: ERLayout,\n};\n"]}},"error":null,"hash":"9f9a93f8a71cc1a59917bab9c798750c","cacheData":{"env":{}}}