{"id":"node_modules/@antv/layout/lib/layout/forceAtlas2/quad.js","dependencies":[{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\lib\\layout\\forceAtlas2\\quad.js.map","includedInParent":true,"mtime":1676178923747},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\src\\layout\\forceAtlas2\\quad.ts","includedInParent":true,"mtime":1676178924034},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\package.json","includedInParent":true,"mtime":1676178924413},{"name":"D:\\myData\\前端\\doing\\graph-visualization-interaction\\node_modules\\@antv\\layout\\package.json","includedInParent":true,"mtime":1676178923486}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Quad = /** @class */ (function () {\n    function Quad(params) {\n        /**\n         * the center position of this quad\n         * @type  {number}\n         */\n        this.xmid = params.xmid;\n        /**\n         * the center position of this quad\n         * @type  {number}\n         */\n        this.ymid = params.ymid;\n        /**\n         * the length of this quad\n         * @type  {number}\n         */\n        this.length = params.length;\n        /**\n         * the mass center of this quad\n         * @type  {number}\n         */\n        this.massCenter = params.massCenter || [0, 0];\n        /**\n         * the mass of this quad\n         * @type  {number}\n         */\n        this.mass = params.mass || 1;\n    }\n    Quad.prototype.getLength = function () {\n        return this.length;\n    };\n    Quad.prototype.contains = function (x, y) {\n        var halfLen = this.length / 2;\n        return (x <= this.xmid + halfLen &&\n            x >= this.xmid - halfLen &&\n            y <= this.ymid + halfLen &&\n            y >= this.ymid - halfLen);\n    };\n    // northwest quadrant\n    // tslint:disable-next-line\n    Quad.prototype.NW = function () {\n        var x = this.xmid - this.length / 4;\n        var y = this.ymid + this.length / 4;\n        var len = this.length / 2;\n        var params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        var NW = new Quad(params);\n        return NW;\n    };\n    // northeast\n    // tslint:disable-next-line\n    Quad.prototype.NE = function () {\n        var x = this.xmid + this.length / 4;\n        var y = this.ymid + this.length / 4;\n        var len = this.length / 2;\n        var params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        var NE = new Quad(params);\n        return NE;\n    };\n    // southwest\n    // tslint:disable-next-line\n    Quad.prototype.SW = function () {\n        var x = this.xmid - this.length / 4;\n        var y = this.ymid - this.length / 4;\n        var len = this.length / 2;\n        var params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        var SW = new Quad(params);\n        return SW;\n    };\n    // southeast\n    // tslint:disable-next-line\n    Quad.prototype.SE = function () {\n        var x = this.xmid + this.length / 4;\n        var y = this.ymid - this.length / 4;\n        var len = this.length / 2;\n        var params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        var SE = new Quad(params);\n        return SE;\n    };\n    return Quad;\n}());\nexports.default = Quad;\n"},"sourceMaps":{"js":{"version":3,"file":"quad.js","sourceRoot":"","sources":["../../../src/layout/forceAtlas2/quad.ts"],"names":[],"mappings":"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","sourcesContent":["import { PointTuple } from \"../types\";\n\n/**\n * @fileOverview quad\n * @author shiwu.wyy@antfin.com\n */\n\ntype QuadProps = {\n  xmid: number;\n  ymid: number;\n  length: number;\n  massCenter?: PointTuple;\n  mass?: number;\n};\n\nexport default class Quad {\n  public xmid: number;\n  public ymid: number;\n  public length: number;\n  public massCenter: PointTuple;\n  public mass: number;\n  constructor(params: QuadProps) {\n    /**\n     * the center position of this quad\n     * @type  {number}\n     */\n    this.xmid = params.xmid;\n    /**\n     * the center position of this quad\n     * @type  {number}\n     */\n    this.ymid = params.ymid;\n    /**\n     * the length of this quad\n     * @type  {number}\n     */\n    this.length = params.length;\n    /**\n     * the mass center of this quad\n     * @type  {number}\n     */\n    this.massCenter = params.massCenter || [0, 0];\n    /**\n     * the mass of this quad\n     * @type  {number}\n     */\n    this.mass = params.mass || 1;\n  }\n  getLength() {\n    return this.length;\n  }\n  contains(x: number, y: number) {\n    const halfLen = this.length / 2;\n    return (x <= this.xmid + halfLen &&\n      x >= this.xmid - halfLen &&\n      y <= this.ymid + halfLen &&\n      y >= this.ymid - halfLen);\n  }\n  // northwest quadrant\n  // tslint:disable-next-line\n  NW() {\n    const x = this.xmid - this.length / 4;\n    const y = this.ymid + this.length / 4;\n    const len = this.length / 2;\n    const params: QuadProps = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const NW = new Quad(params);\n    return NW;\n  }\n  // northeast\n  // tslint:disable-next-line\n  NE() {\n    const x = this.xmid + this.length / 4;\n    const y = this.ymid + this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const NE = new Quad(params);\n    return NE;\n  }\n  // southwest\n  // tslint:disable-next-line\n  SW() {\n    const x = this.xmid - this.length / 4;\n    const y = this.ymid - this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const SW = new Quad(params);\n    return SW;\n  }\n  // southeast\n  // tslint:disable-next-line\n  SE() {\n    const x = this.xmid + this.length / 4;\n    const y = this.ymid - this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const SE = new Quad(params);\n    return SE;\n  }\n}\n"]}},"error":null,"hash":"d308e3d293c5ddf857512ffa7f40ddb0","cacheData":{"env":{}}}